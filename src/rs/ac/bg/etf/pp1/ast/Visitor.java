// generated with ast extension for cup
// version 0.8
// 17/1/2022 8:52:44


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ColonHelper ColonHelper);
    public void visit(Unmatched Unmatched);
    public void visit(MethodDecl MethodDecl);
    public void visit(LeftOr LeftOr);
    public void visit(Mulop Mulop);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(PotentialMinus PotentialMinus);
    public void visit(MethodType MethodType);
    public void visit(CondTermList CondTermList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(DoCondition DoCondition);
    public void visit(StatementList StatementList);
    public void visit(FuncCallNoParams FuncCallNoParams);
    public void visit(Addop Addop);
    public void visit(VarDeclListPom VarDeclListPom);
    public void visit(RecordDecl RecordDecl);
    public void visit(Factor Factor);
    public void visit(CondFactList CondFactList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(ActParsFunc ActParsFunc);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(VarDeclSingle VarDeclSingle);
    public void visit(ElseStart ElseStart);
    public void visit(VarDeclListProgram VarDeclListProgram);
    public void visit(LeftAnd LeftAnd);
    public void visit(IfCondition IfCondition);
    public void visit(DoConditionStart DoConditionStart);
    public void visit(Do Do);
    public void visit(DesignatorChoiceList DesignatorChoiceList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(DeclListProgramPom DeclListProgramPom);
    public void visit(ConstDeclListProgram ConstDeclListProgram);
    public void visit(Decl Decl);
    public void visit(DesignatorChoice DesignatorChoice);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(DeclListProgram DeclListProgram);
    public void visit(FormParsPotential FormParsPotential);
    public void visit(ConstDeclPomList ConstDeclPomList);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SingleStatement SingleStatement);
    public void visit(Squares Squares);
    public void visit(RecordDeclName RecordDeclName);
    public void visit(FormParsListPom FormParsListPom);
    public void visit(ConstType ConstType);
    public void visit(FormPars FormPars);
    public void visit(ColonHelp ColonHelp);
    public void visit(NoSquares NoSquares);
    public void visit(YesSquares YesSquares);
    public void visit(LessEqualsOperator LessEqualsOperator);
    public void visit(LessOperator LessOperator);
    public void visit(GreaterEqualsOperator GreaterEqualsOperator);
    public void visit(GreaterOp GreaterOp);
    public void visit(NoEqualsOp NoEqualsOp);
    public void visit(EqualsOp EqualsOp);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(Type Type);
    public void visit(Label Label);
    public void visit(ConditionFactorSingle ConditionFactorSingle);
    public void visit(ConditionFactor ConditionFactor);
    public void visit(ConditionFactorListEmpty ConditionFactorListEmpty);
    public void visit(ConditionFactorList ConditionFactorList);
    public void visit(CondTerm CondTerm);
    public void visit(ConditionTermListEmpty ConditionTermListEmpty);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(LeftAnd1 LeftAnd1);
    public void visit(LeftOr1 LeftOr1);
    public void visit(Condition Condition);
    public void visit(ActParamsSingle ActParamsSingle);
    public void visit(ActParams ActParams);
    public void visit(ActParamsFuncCallEmpty ActParamsFuncCallEmpty);
    public void visit(ActParamsFuncCall ActParamsFuncCall);
    public void visit(FuncCallNP FuncCallNP);
    public void visit(FuncCallP FuncCallP);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(FactorNew FactorNew);
    public void visit(FactorNewSquare FactorNewSquare);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(TermSingleFactor TermSingleFactor);
    public void visit(TermMulFactor TermMulFactor);
    public void visit(TermExprMin TermExprMin);
    public void visit(TermExpr TermExpr);
    public void visit(AddExprMin AddExprMin);
    public void visit(AddExpr AddExpr);
    public void visit(Statements Statements);
    public void visit(StatementsLabelListNoLabel StatementsLabelListNoLabel);
    public void visit(StatementLabelList StatementLabelList);
    public void visit(StatementNoLabelSingle StatementNoLabelSingle);
    public void visit(StatementLabelSingle StatementLabelSingle);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementReturnNull StatementReturnNull);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementDoWhile StatementDoWhile);
    public void visit(DoConditionStart1 DoConditionStart1);
    public void visit(DoCondition1 DoCondition1);
    public void visit(DoStmt DoStmt);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(ElseStart1 ElseStart1);
    public void visit(IFCondition1 IFCondition1);
    public void visit(NoStmt NoStmt);
    public void visit(ListStatement ListStatement);
    public void visit(GotoSingleStatement GotoSingleStatement);
    public void visit(SingleStatementPrint SingleStatementPrint);
    public void visit(SingleStatementPrintNumconst SingleStatementPrintNumconst);
    public void visit(SingleStatementRead SingleStatementRead);
    public void visit(SingleStatementDesignator SingleStatementDesignator);
    public void visit(DesignatorSquare DesignatorSquare);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(DesigatorStatementError DesigatorStatementError);
    public void visit(DesignatorStatementActParamsEmpty DesignatorStatementActParamsEmpty);
    public void visit(DesignatorStatementActParams DesignatorStatementActParams);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementEq DesignatorStatementEq);
    public void visit(FormParsDerived1 FormParsDerived1);
    public void visit(FormalParams FormalParams);
    public void visit(FormalParameterError FormalParameterError);
    public void visit(FormParsSingleN FormParsSingleN);
    public void visit(FormalParamsSingleSquare FormalParamsSingleSquare);
    public void visit(FormalParamsListEmpty FormalParamsListEmpty);
    public void visit(FormalParamsList FormalParamsList);
    public void visit(FormalParamsListPomEmpty FormalParamsListPomEmpty);
    public void visit(FormalParamsListPom FormalParamsListPom);
    public void visit(RecordDeclarationName RecordDeclarationName);
    public void visit(RecordDeclaration RecordDeclaration);
    public void visit(MethodDeclarationListEmpty MethodDeclarationListEmpty);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(MethodVoidName MethodVoidName);
    public void visit(MethodTypeName_ MethodTypeName_);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(DeclarationListProgramEmpty DeclarationListProgramEmpty);
    public void visit(DeclarationListProgram DeclarationListProgram);
    public void visit(DeclarationRecord DeclarationRecord);
    public void visit(DeclarationVar DeclarationVar);
    public void visit(DeclarationConst DeclarationConst);
    public void visit(BoolConstDeclaration BoolConstDeclaration);
    public void visit(CharConstDeclaration CharConstDeclaration);
    public void visit(NumConstDeclaration NumConstDeclaration);
    public void visit(ConstDeclarationError ConstDeclarationError);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ConstDeclarationListProgram ConstDeclarationListProgram);
    public void visit(ConstDeclarationListEmpty ConstDeclarationListEmpty);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ConstDeclarationPomListEmpty ConstDeclarationPomListEmpty);
    public void visit(ConstDeclarationPomList ConstDeclarationPomList);
    public void visit(VarDeclarationError VarDeclarationError);
    public void visit(VarDeclarationSquares VarDeclarationSquares);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(VarDeclarationListProgram VarDeclarationListProgram);
    public void visit(VarDeclarationListEmpty VarDeclarationListEmpty);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(VarDeclarationListPomEmpty VarDeclarationListPomEmpty);
    public void visit(VarDeclarationListPom VarDeclarationListPom);
    public void visit(VarDeclarationListPomSquare VarDeclarationListPomSquare);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
