INFO  05:46:12,313 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  05:46:12,360 - #3 program
INFO  05:46:12,360 - #45 test301
INFO  05:46:12,360 - #10 const
INFO  05:46:12,361 - #45 int
INFO  05:46:12,361 - #45 nula
INFO  05:46:12,362 - #11 =
INFO  05:46:12,362 - #44 0
INFO  05:46:12,362 - #9 ;
INFO  05:46:12,363 - #10 const
INFO  05:46:12,363 - #45 int
INFO  05:46:12,363 - #45 jedan
INFO  05:46:12,363 - #11 =
INFO  05:46:12,363 - #44 1
INFO  05:46:12,363 - #9 ;
INFO  05:46:12,363 - #10 const
INFO  05:46:12,363 - #45 int
INFO  05:46:12,364 - #45 pet
INFO  05:46:12,364 - #11 =
INFO  05:46:12,364 - #44 5
INFO  05:46:12,364 - #9 ;
INFO  05:46:12,365 - #45 int
INFO  05:46:12,365 - #45 niz
INFO  05:46:12,365 - #12 [
INFO  05:46:12,365 - #13 ]
INFO  05:46:12,365 - #9 ;
INFO  05:46:12,366 - #45 char
INFO  05:46:12,366 - #45 nizch
INFO  05:46:12,366 - #12 [
INFO  05:46:12,366 - #13 ]
INFO  05:46:12,366 - #9 ;
INFO  05:46:12,366 - #16 record
INFO  05:46:12,366 - #45 TestRecord
INFO  05:46:12,367 - #4 {
INFO  05:46:12,367 - #45 int
INFO  05:46:12,367 - #45 p
INFO  05:46:12,367 - #9 ;
INFO  05:46:12,368 - #5 }
INFO  05:46:12,368 - #16 record
INFO  05:46:12,368 - #45 TestRecord2
INFO  05:46:12,368 - #4 {
INFO  05:46:12,368 - #45 int
INFO  05:46:12,368 - #45 p
INFO  05:46:12,368 - #9 ;
INFO  05:46:12,369 - #5 }
INFO  05:46:12,369 - #16 record
INFO  05:46:12,369 - #45 TestRecord3
INFO  05:46:12,369 - #4 {
INFO  05:46:12,369 - #45 int
INFO  05:46:12,369 - #45 p
INFO  05:46:12,369 - #9 ;
INFO  05:46:12,369 - #5 }
INFO  05:46:12,369 - #45 TestRecord
INFO  05:46:12,370 - #45 t1
INFO  05:46:12,370 - #9 ;
INFO  05:46:12,370 - #45 TestRecord
INFO  05:46:12,370 - #45 t2
INFO  05:46:12,370 - #9 ;
INFO  05:46:12,370 - #45 TestRecord
INFO  05:46:12,370 - #45 t3
INFO  05:46:12,370 - #9 ;
INFO  05:46:12,370 - #45 int
INFO  05:46:12,371 - #45 x
INFO  05:46:12,371 - #9 ;
INFO  05:46:12,371 - #4 {
INFO  05:46:12,371 - #45 int
INFO  05:46:12,372 - #45 sum
INFO  05:46:12,372 - #6 (
INFO  05:46:12,372 - #45 int
INFO  05:46:12,372 - #45 z
INFO  05:46:12,372 - #8 ,
INFO  05:46:12,373 - #45 int
INFO  05:46:12,373 - #45 d
INFO  05:46:12,373 - #7 )
INFO  05:46:12,373 - #4 {
INFO  05:46:12,373 - #43 return
INFO  05:46:12,374 - #9 ;
INFO  05:46:12,374 - #5 }
INFO  05:46:12,374 - #45 int
INFO  05:46:12,375 - #45 inkrement
INFO  05:46:12,375 - #6 (
INFO  05:46:12,375 - #45 int
INFO  05:46:12,375 - #45 a
INFO  05:46:12,375 - #8 ,
INFO  05:46:12,375 - #45 int
INFO  05:46:12,375 - #45 inc
INFO  05:46:12,375 - #7 )
INFO  05:46:12,375 - #45 int
INFO  05:46:12,375 - #45 pom
INFO  05:46:12,375 - #9 ;
INFO  05:46:12,375 - #45 TestRecord
INFO  05:46:12,375 - #45 t2
INFO  05:46:12,375 - #9 ;
INFO  05:46:12,376 - #4 {
INFO  05:46:12,376 - #45 pom
INFO  05:46:12,376 - #11 =
INFO  05:46:12,376 - #25 new
INFO  05:46:12,376 - #45 TestRecord
INFO  05:46:12,376 - #9 ;
INFO  05:46:12,376 - #45 t2
INFO  05:46:12,377 - #20 .
INFO  05:46:12,378 - #45 x
INFO  05:46:12,378 - #11 =
INFO  05:46:12,379 - #44 2
INFO  05:46:12,379 - #9 ;
INFO  05:46:12,379 - #39 do
INFO  05:46:12,379 - #4 {
INFO  05:46:12,380 - #45 pom
INFO  05:46:12,380 - #11 =
INFO  05:46:12,380 - #44 1
INFO  05:46:12,380 - #9 ;
INFO  05:46:12,381 - #5 }
INFO  05:46:12,381 - #40 while
INFO  05:46:12,381 - #6 (
INFO  05:46:12,382 - #45 x
INFO  05:46:12,382 - #2 ==
INFO  05:46:12,382 - #45 jedan
INFO  05:46:12,383 - #48 &&
INFO  05:46:12,383 - #45 x
INFO  05:46:12,383 - #2 ==
INFO  05:46:12,383 - #45 nula
INFO  05:46:12,383 - #37 ||
INFO  05:46:12,384 - #44 2
INFO  05:46:12,384 - #7 )
INFO  05:46:12,385 - #9 ;
INFO  05:46:12,385 - #43 return
INFO  05:46:12,386 - #45 sum
INFO  05:46:12,386 - #6 (
INFO  05:46:12,386 - #45 x
INFO  05:46:12,386 - #8 ,
INFO  05:46:12,386 - #45 pom
INFO  05:46:12,386 - #7 )
INFO  05:46:12,386 - #9 ;
INFO  05:46:12,386 - #5 }
INFO  05:46:12,386 - #17 void
INFO  05:46:12,387 - #45 main
INFO  05:46:12,387 - #6 (
INFO  05:46:12,387 - #7 )
INFO  05:46:12,388 - #45 int
INFO  05:46:12,388 - #45 bodovi
INFO  05:46:12,388 - #9 ;
INFO  05:46:12,388 - #4 {
INFO  05:46:12,388 - #45 sum
INFO  05:46:12,388 - #6 (
INFO  05:46:12,388 - #7 )
INFO  05:46:12,388 - #9 ;
INFO  05:46:12,388 - #45 inkrement
INFO  05:46:12,388 - #6 (
INFO  05:46:12,388 - #7 )
INFO  05:46:12,388 - #9 ;
INFO  05:46:12,388 - #5 }
INFO  05:46:12,389 - #5 }
INFO  05:46:12,394 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  DeclarationListProgram(
    DeclarationListProgram(
      DeclarationListProgram(
        DeclarationListProgram(
          DeclarationListProgram(
            DeclarationListProgram(
              DeclarationListProgram(
                DeclarationListProgram(
                  DeclarationListProgram(
                    DeclarationListProgram(
                      DeclarationListProgram(
                        DeclarationListProgram(
                          DeclarationListProgramEmpty(
                          ) [DeclarationListProgramEmpty]
                          DeclarationConst(
                            ConstDeclaration(
                              Type(
                               int
                              ) [Type]
                             nula
                              NumConstDeclaration(
                               0
                              ) [NumConstDeclaration]
                              ConstDeclarationPomListEmpty(
                              ) [ConstDeclarationPomListEmpty]
                            ) [ConstDeclaration]
                          ) [DeclarationConst]
                        ) [DeclarationListProgram]
                        DeclarationConst(
                          ConstDeclaration(
                            Type(
                             int
                            ) [Type]
                           jedan
                            NumConstDeclaration(
                             1
                            ) [NumConstDeclaration]
                            ConstDeclarationPomListEmpty(
                            ) [ConstDeclarationPomListEmpty]
                          ) [ConstDeclaration]
                        ) [DeclarationConst]
                      ) [DeclarationListProgram]
                      DeclarationConst(
                        ConstDeclaration(
                          Type(
                           int
                          ) [Type]
                         pet
                          NumConstDeclaration(
                           5
                          ) [NumConstDeclaration]
                          ConstDeclarationPomListEmpty(
                          ) [ConstDeclarationPomListEmpty]
                        ) [ConstDeclaration]
                      ) [DeclarationConst]
                    ) [DeclarationListProgram]
                    DeclarationVar(
                      VarDeclaration(
                        Type(
                         int
                        ) [Type]
                       niz
                        Squares(
                        ) [Squares]
                        VarDeclarationListPomEmpty(
                        ) [VarDeclarationListPomEmpty]
                      ) [VarDeclaration]
                    ) [DeclarationVar]
                  ) [DeclarationListProgram]
                  DeclarationVar(
                    VarDeclaration(
                      Type(
                       char
                      ) [Type]
                     nizch
                      Squares(
                      ) [Squares]
                      VarDeclarationListPomEmpty(
                      ) [VarDeclarationListPomEmpty]
                    ) [VarDeclaration]
                  ) [DeclarationVar]
                ) [DeclarationListProgram]
                DeclarationRecord(
                  RecordDeclaration(
                    RecordDeclarationName(
                     TestRecord
                    ) [RecordDeclarationName]
                    VarDeclarationList(
                      VarDeclarationListEmpty(
                      ) [VarDeclarationListEmpty]
                      VarDeclaration(
                        Type(
                         int
                        ) [Type]
                       p
                        NoSquares(
                        ) [NoSquares]
                        VarDeclarationListPomEmpty(
                        ) [VarDeclarationListPomEmpty]
                      ) [VarDeclaration]
                    ) [VarDeclarationList]
                  ) [RecordDeclaration]
                ) [DeclarationRecord]
              ) [DeclarationListProgram]
              DeclarationRecord(
                RecordDeclaration(
                  RecordDeclarationName(
                   TestRecord2
                  ) [RecordDeclarationName]
                  VarDeclarationList(
                    VarDeclarationListEmpty(
                    ) [VarDeclarationListEmpty]
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                     p
                      NoSquares(
                      ) [NoSquares]
                      VarDeclarationListPomEmpty(
                      ) [VarDeclarationListPomEmpty]
                    ) [VarDeclaration]
                  ) [VarDeclarationList]
                ) [RecordDeclaration]
              ) [DeclarationRecord]
            ) [DeclarationListProgram]
            DeclarationRecord(
              RecordDeclaration(
                RecordDeclarationName(
                 TestRecord3
                ) [RecordDeclarationName]
                VarDeclarationList(
                  VarDeclarationListEmpty(
                  ) [VarDeclarationListEmpty]
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                   p
                    NoSquares(
                    ) [NoSquares]
                    VarDeclarationListPomEmpty(
                    ) [VarDeclarationListPomEmpty]
                  ) [VarDeclaration]
                ) [VarDeclarationList]
              ) [RecordDeclaration]
            ) [DeclarationRecord]
          ) [DeclarationListProgram]
          DeclarationVar(
            VarDeclaration(
              Type(
               TestRecord
              ) [Type]
             t1
              NoSquares(
              ) [NoSquares]
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [DeclarationVar]
        ) [DeclarationListProgram]
        DeclarationVar(
          VarDeclaration(
            Type(
             TestRecord
            ) [Type]
           t2
            NoSquares(
            ) [NoSquares]
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
          ) [VarDeclaration]
        ) [DeclarationVar]
      ) [DeclarationListProgram]
      DeclarationVar(
        VarDeclaration(
          Type(
           TestRecord
          ) [Type]
         t3
          NoSquares(
          ) [NoSquares]
          VarDeclarationListPomEmpty(
          ) [VarDeclarationListPomEmpty]
        ) [VarDeclaration]
      ) [DeclarationVar]
    ) [DeclarationListProgram]
    DeclarationVar(
      VarDeclaration(
        Type(
         int
        ) [Type]
       x
        NoSquares(
        ) [NoSquares]
        VarDeclarationListPomEmpty(
        ) [VarDeclarationListPomEmpty]
      ) [VarDeclaration]
    ) [DeclarationVar]
  ) [DeclarationListProgram]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationListEmpty(
        ) [MethodDeclarationListEmpty]
        MethodDeclaration(
          MethodTypeName_(
            Type(
             int
            ) [Type]
           sum
          ) [MethodTypeName_]
          FormalParams(
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             z
            ) [FormalParamsSingleSquare]
            FormalParamsListPom(
              FormalParamsListPomEmpty(
              ) [FormalParamsListPomEmpty]
              FormalParamsSingleSquare(
                Type(
                 int
                ) [Type]
               d
              ) [FormalParamsSingleSquare]
            ) [FormalParamsListPom]
          ) [FormalParams]
          VarDeclarationListEmpty(
          ) [VarDeclarationListEmpty]
          ListStatement(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              StatementReturnNull(
              ) [StatementReturnNull]
            ) [MatchedStmt]
          ) [ListStatement]
        ) [MethodDeclaration]
      ) [MethodDeclarationList]
      MethodDeclaration(
        MethodTypeName_(
          Type(
           int
          ) [Type]
         inkrement
        ) [MethodTypeName_]
        FormalParams(
          FormalParamsSingleSquare(
            Type(
             int
            ) [Type]
           a
          ) [FormalParamsSingleSquare]
          FormalParamsListPom(
            FormalParamsListPomEmpty(
            ) [FormalParamsListPomEmpty]
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             inc
            ) [FormalParamsSingleSquare]
          ) [FormalParamsListPom]
        ) [FormalParams]
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationListEmpty(
            ) [VarDeclarationListEmpty]
            VarDeclaration(
              Type(
               int
              ) [Type]
             pom
              NoSquares(
              ) [NoSquares]
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [VarDeclarationList]
          VarDeclaration(
            Type(
             TestRecord
            ) [Type]
           t2
            NoSquares(
            ) [NoSquares]
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
          ) [VarDeclaration]
        ) [VarDeclarationList]
        ListStatement(
          ListStatement(
            ListStatement(
              ListStatement(
                NoStmt(
                ) [NoStmt]
                MatchedStmt(
                  StatementNoLabelSingle(
                    SingleStatementDesignator(
                      DesignatorStatementEq(
                        DesignatorSingle(
                         pom
                        ) [DesignatorSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorNew(
                              Type(
                               TestRecord
                              ) [Type]
                            ) [FactorNew]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [DesignatorStatementEq]
                    ) [SingleStatementDesignator]
                  ) [StatementNoLabelSingle]
                ) [MatchedStmt]
              ) [ListStatement]
              MatchedStmt(
                StatementNoLabelSingle(
                  SingleStatementDesignator(
                    DesignatorStatementEq(
                      DesignatorDot(
                        DesignatorSingle(
                         t2
                        ) [DesignatorSingle]
                       x
                      ) [DesignatorDot]
                      TermExpr(
                        TermSingleFactor(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [DesignatorStatementEq]
                  ) [SingleStatementDesignator]
                ) [StatementNoLabelSingle]
              ) [MatchedStmt]
            ) [ListStatement]
            MatchedStmt(
              StatementDoWhile(
                DoStmt(
                ) [DoStmt]
                ListStatement(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    StatementsLabelListNoLabel(
                      Statements(
                        ListStatement(
                          NoStmt(
                          ) [NoStmt]
                          MatchedStmt(
                            StatementNoLabelSingle(
                              SingleStatementDesignator(
                                DesignatorStatementEq(
                                  DesignatorSingle(
                                   pom
                                  ) [DesignatorSingle]
                                  TermExpr(
                                    TermSingleFactor(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingleFactor]
                                  ) [TermExpr]
                                ) [DesignatorStatementEq]
                              ) [SingleStatementDesignator]
                            ) [StatementNoLabelSingle]
                          ) [MatchedStmt]
                        ) [ListStatement]
                      ) [Statements]
                    ) [StatementsLabelListNoLabel]
                  ) [MatchedStmt]
                ) [ListStatement]
                Condition(
                  CondTerm(
                    ConditionFactor(
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            DesignatorSingle(
                             x
                            ) [DesignatorSingle]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                      EqualsOp(
                      ) [EqualsOp]
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            DesignatorSingle(
                             jedan
                            ) [DesignatorSingle]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [ConditionFactor]
                    ConditionFactorList(
                      ConditionFactorListEmpty(
                      ) [ConditionFactorListEmpty]
                      ConditionFactor(
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              DesignatorSingle(
                               x
                              ) [DesignatorSingle]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                        EqualsOp(
                        ) [EqualsOp]
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              DesignatorSingle(
                               nula
                              ) [DesignatorSingle]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ConditionFactor]
                    ) [ConditionFactorList]
                  ) [CondTerm]
                  ConditionTermList(
                    ConditionTermListEmpty(
                    ) [ConditionTermListEmpty]
                    CondTerm(
                      ConditionFactorSingle(
                        TermExpr(
                          TermSingleFactor(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ConditionFactorSingle]
                      ConditionFactorListEmpty(
                      ) [ConditionFactorListEmpty]
                    ) [CondTerm]
                  ) [ConditionTermList]
                ) [Condition]
              ) [StatementDoWhile]
            ) [MatchedStmt]
          ) [ListStatement]
          MatchedStmt(
            StatementReturn(
              TermExpr(
                TermSingleFactor(
                  FuncCall(
                    DesignatorSingle(
                     sum
                    ) [DesignatorSingle]
                    ActParamsFuncCall(
                      ActParams(
                        ActParamsSingle(
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                DesignatorSingle(
                                 x
                                ) [DesignatorSingle]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                        ) [ActParamsSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              DesignatorSingle(
                               pom
                              ) [DesignatorSingle]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ActParams]
                    ) [ActParamsFuncCall]
                  ) [FuncCall]
                ) [TermSingleFactor]
              ) [TermExpr]
            ) [StatementReturn]
          ) [MatchedStmt]
        ) [ListStatement]
      ) [MethodDeclaration]
    ) [MethodDeclarationList]
    MethodDeclaration(
      MethodVoidName(
       main
      ) [MethodVoidName]
      FormParsDerived1(
      ) [FormParsDerived1]
      VarDeclarationList(
        VarDeclarationListEmpty(
        ) [VarDeclarationListEmpty]
        VarDeclaration(
          Type(
           int
          ) [Type]
         bodovi
          NoSquares(
          ) [NoSquares]
          VarDeclarationListPomEmpty(
          ) [VarDeclarationListPomEmpty]
        ) [VarDeclaration]
      ) [VarDeclarationList]
      ListStatement(
        ListStatement(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            StatementNoLabelSingle(
              SingleStatementDesignator(
                DesignatorStatementActParamsEmpty(
                  DesignatorSingle(
                   sum
                  ) [DesignatorSingle]
                ) [DesignatorStatementActParamsEmpty]
              ) [SingleStatementDesignator]
            ) [StatementNoLabelSingle]
          ) [MatchedStmt]
        ) [ListStatement]
        MatchedStmt(
          StatementNoLabelSingle(
            SingleStatementDesignator(
              DesignatorStatementActParamsEmpty(
                DesignatorSingle(
                 inkrement
                ) [DesignatorSingle]
              ) [DesignatorStatementActParamsEmpty]
            ) [SingleStatementDesignator]
          ) [StatementNoLabelSingle]
        ) [MatchedStmt]
      ) [ListStatement]
    ) [MethodDeclaration]
  ) [MethodDeclarationList]
) [Program]
INFO  05:46:12,395 - ===================================
INFO  05:46:12,397 - Deklarisana konstanta nula
INFO  05:46:12,397 - Deklarisana konstanta jedan
INFO  05:46:12,397 - Deklarisana konstanta pet
INFO  05:46:12,397 - Deklarisana promenljiva niz na liniji 9
INFO  05:46:12,397 - Deklarisana promenljiva nizch na liniji 10
INFO  05:46:12,397 - Deklarisana promenljiva p na liniji 13
INFO  05:46:12,398 - Deklarisana promenljiva p na liniji 17
INFO  05:46:12,398 - Deklarisana promenljiva p na liniji 21
INFO  05:46:12,398 - Deklarisana promenljiva t1 na liniji 26
INFO  05:46:12,398 - Deklarisana promenljiva t2 na liniji 27
INFO  05:46:12,398 - Deklarisana promenljiva t3 na liniji 28
INFO  05:46:12,398 - Deklarisana promenljiva x na liniji 29
INFO  05:46:12,398 - Obradjuje se funkcija sum na liniji 35
ERROR 05:46:12,398 - Metoda sum mora biti deklarisana kao void. 
INFO  05:46:12,398 - Obradjuje se funkcija inkrement na liniji 40
INFO  05:46:12,398 - Deklarisana promenljiva pom na liniji 41
INFO  05:46:12,399 - Deklarisana promenljiva t2 na liniji 42
INFO  05:46:12,399 - Napravljen je objekat korisnickog tipa TestRecord  na liniji 44
INFO  05:46:12,399 - Dodela vrednosti  na liniji 44
ERROR 05:46:12,399 - Greska na liniji 44 :  nekompatibilni tipovi u dodeli vrednosti! 
INFO  05:46:12,399 - Dodela vrednosti  na liniji 45
INFO  05:46:12,399 - Dodela vrednosti  na liniji 48
INFO  05:46:12,399 - Izvrsavanje poredjenje izraza  na liniji 50
INFO  05:46:12,399 - Izvrsavanje poredjenje izraza  na liniji 50
ERROR 05:46:12,400 - Uslov mora biti tipa boolean  na liniji 50
INFO  05:46:12,400 - Pozivanje oziv funkcije sum na liniji 52
INFO  05:46:12,400 - Obradjuje se funkcija main na liniji 59
INFO  05:46:12,400 - Deklarisana promenljiva bodovi na liniji 60
INFO  05:46:12,400 -  Print count calls = 0
INFO  05:46:12,400 -  Deklarisanih promenljivih ima = 12
INFO  05:46:12,400 - ===================================
ERROR 05:46:12,401 - Parsiranje neuspesno.
