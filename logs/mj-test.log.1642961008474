INFO  19:03:12,471 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  19:03:12,540 - #3 program
INFO  19:03:12,540 - #45 test301
INFO  19:03:12,541 - #16 record
INFO  19:03:12,542 - #45 TestRecord
INFO  19:03:12,542 - #4 {
INFO  19:03:12,542 - #45 int
INFO  19:03:12,543 - #45 p
INFO  19:03:12,544 - #9 ;
INFO  19:03:12,544 - #45 int
INFO  19:03:12,544 - #45 p1
INFO  19:03:12,544 - #9 ;
INFO  19:03:12,544 - #45 int
INFO  19:03:12,545 - #45 p2
INFO  19:03:12,545 - #9 ;
INFO  19:03:12,545 - #45 TestRecord
INFO  19:03:12,545 - #45 t1
INFO  19:03:12,545 - #9 ;
INFO  19:03:12,545 - #5 }
INFO  19:03:12,545 - #4 {
INFO  19:03:12,545 - #45 int
INFO  19:03:12,546 - #45 inkrement
INFO  19:03:12,546 - #6 (
INFO  19:03:12,547 - #45 int
INFO  19:03:12,547 - #45 a
INFO  19:03:12,547 - #8 ,
INFO  19:03:12,547 - #45 int
INFO  19:03:12,547 - #45 b
INFO  19:03:12,548 - #7 )
INFO  19:03:12,548 - #45 TestRecord
INFO  19:03:12,548 - #45 t2
INFO  19:03:12,548 - #9 ;
INFO  19:03:12,548 - #45 int
INFO  19:03:12,548 - #45 x
INFO  19:03:12,548 - #12 [
INFO  19:03:12,548 - #13 ]
INFO  19:03:12,548 - #9 ;
INFO  19:03:12,549 - #4 {
INFO  19:03:12,549 - #45 x
INFO  19:03:12,549 - #11 =
INFO  19:03:12,550 - #44 2
INFO  19:03:12,550 - #9 ;
INFO  19:03:12,550 - #36 if
INFO  19:03:12,550 - #6 (
INFO  19:03:12,550 - #45 x
INFO  19:03:12,550 - #32 >
INFO  19:03:12,550 - #44 2
INFO  19:03:12,552 - #7 )
INFO  19:03:12,555 - #45 x
INFO  19:03:12,555 - #11 =
INFO  19:03:12,555 - #44 1
INFO  19:03:12,555 - #9 ;
INFO  19:03:12,555 - #43 return
INFO  19:03:12,555 - #44 2
INFO  19:03:12,556 - #9 ;
INFO  19:03:12,556 - #5 }
INFO  19:03:12,556 - #17 void
INFO  19:03:12,556 - #45 main
INFO  19:03:12,556 - #6 (
INFO  19:03:12,556 - #7 )
INFO  19:03:12,557 - #45 int
INFO  19:03:12,557 - #45 v
INFO  19:03:12,557 - #9 ;
INFO  19:03:12,557 - #4 {
INFO  19:03:12,557 - #45 v
INFO  19:03:12,557 - #11 =
INFO  19:03:12,557 - #45 inkrement
INFO  19:03:12,557 - #6 (
INFO  19:03:12,558 - #7 )
INFO  19:03:12,558 - #9 ;
INFO  19:03:12,558 - #5 }
INFO  19:03:12,558 - #5 }
INFO  19:03:12,564 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  DeclarationListProgram(
    DeclarationListProgramEmpty(
    ) [DeclarationListProgramEmpty]
    DeclarationRecord(
      RecordDeclaration(
        RecordDeclarationName(
         TestRecord
        ) [RecordDeclarationName]
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationListEmpty(
                ) [VarDeclarationListEmpty]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                 p
                  VarDeclarationListPomEmpty(
                  ) [VarDeclarationListPomEmpty]
                ) [VarDeclaration]
              ) [VarDeclarationList]
              VarDeclaration(
                Type(
                 int
                ) [Type]
               p1
                VarDeclarationListPomEmpty(
                ) [VarDeclarationListPomEmpty]
              ) [VarDeclaration]
            ) [VarDeclarationList]
            VarDeclaration(
              Type(
               int
              ) [Type]
             p2
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [VarDeclarationList]
          VarDeclaration(
            Type(
             TestRecord
            ) [Type]
           t1
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
          ) [VarDeclaration]
        ) [VarDeclarationList]
      ) [RecordDeclaration]
    ) [DeclarationRecord]
  ) [DeclarationListProgram]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationListEmpty(
      ) [MethodDeclarationListEmpty]
      MethodDeclaration(
        MethodTypeName_(
          Type(
           int
          ) [Type]
         inkrement
        ) [MethodTypeName_]
        FormalParams(
          FormalParamsSingleSquare(
            Type(
             int
            ) [Type]
           a
          ) [FormalParamsSingleSquare]
          FormalParamsListPom(
            FormalParamsListPomEmpty(
            ) [FormalParamsListPomEmpty]
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamsSingleSquare]
          ) [FormalParamsListPom]
        ) [FormalParams]
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationListEmpty(
            ) [VarDeclarationListEmpty]
            VarDeclaration(
              Type(
               TestRecord
              ) [Type]
             t2
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [VarDeclarationList]
          VarDeclarationSquares(
            Type(
             int
            ) [Type]
           x
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
          ) [VarDeclarationSquares]
        ) [VarDeclarationList]
        ListStatement(
          ListStatement(
            ListStatement(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                StatementNoLabelSingle(
                  SingleStatementDesignator(
                    DesignatorStatementEq(
                      DesignatorSingle(
                       x
                      ) [DesignatorSingle]
                      TermExpr(
                        TermSingleFactor(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [DesignatorStatementEq]
                  ) [SingleStatementDesignator]
                ) [StatementNoLabelSingle]
              ) [MatchedStmt]
            ) [ListStatement]
            UnmatchedStmt(
              UnmatchedIf(
                Condition(
                  CondTerm(
                    ConditionFactor(
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            DesignatorSingle(
                             x
                            ) [DesignatorSingle]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                      GreaterOp(
                      ) [GreaterOp]
                      TermExpr(
                        TermSingleFactor(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [ConditionFactor]
                    ConditionFactorListEmpty(
                    ) [ConditionFactorListEmpty]
                  ) [CondTerm]
                  ConditionTermListEmpty(
                  ) [ConditionTermListEmpty]
                ) [Condition]
                MatchedStmt(
                  StatementNoLabelSingle(
                    SingleStatementDesignator(
                      DesignatorStatementEq(
                        DesignatorSingle(
                         x
                        ) [DesignatorSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [DesignatorStatementEq]
                    ) [SingleStatementDesignator]
                  ) [StatementNoLabelSingle]
                ) [MatchedStmt]
              ) [UnmatchedIf]
            ) [UnmatchedStmt]
          ) [ListStatement]
          MatchedStmt(
            StatementReturn(
              TermExpr(
                TermSingleFactor(
                  FactorNumConst(
                   2
                  ) [FactorNumConst]
                ) [TermSingleFactor]
              ) [TermExpr]
            ) [StatementReturn]
          ) [MatchedStmt]
        ) [ListStatement]
      ) [MethodDeclaration]
    ) [MethodDeclarationList]
    MethodDeclaration(
      MethodVoidName(
       main
      ) [MethodVoidName]
      FormParsDerived1(
      ) [FormParsDerived1]
      VarDeclarationList(
        VarDeclarationListEmpty(
        ) [VarDeclarationListEmpty]
        VarDeclaration(
          Type(
           int
          ) [Type]
         v
          VarDeclarationListPomEmpty(
          ) [VarDeclarationListPomEmpty]
        ) [VarDeclaration]
      ) [VarDeclarationList]
      ListStatement(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          StatementNoLabelSingle(
            SingleStatementDesignator(
              DesignatorStatementEq(
                DesignatorSingle(
                 v
                ) [DesignatorSingle]
                TermExpr(
                  TermSingleFactor(
                    FuncCallNP(
                      DesignatorSingle(
                       inkrement
                      ) [DesignatorSingle]
                    ) [FuncCallNP]
                  ) [TermSingleFactor]
                ) [TermExpr]
              ) [DesignatorStatementEq]
            ) [SingleStatementDesignator]
          ) [StatementNoLabelSingle]
        ) [MatchedStmt]
      ) [ListStatement]
    ) [MethodDeclaration]
  ) [MethodDeclarationList]
) [Program]
INFO  19:03:12,565 - ===================================
INFO  19:03:12,568 - Deklarisana promenljiva p na liniji 7
INFO  19:03:12,568 - Deklarisana promenljiva p1 na liniji 8
INFO  19:03:12,568 - Deklarisana promenljiva p2 na liniji 9
INFO  19:03:12,568 - Deklarisana promenljiva t1 na liniji 10
INFO  19:03:12,568 - Obradjuje se funkcija inkrement na liniji 15
INFO  19:03:12,569 - Deklarisana promenljiva t2 na liniji 16
INFO  19:03:12,569 - Deklaracija niza x  na liniji 17
INFO  19:03:12,569 - Dodela vrednosti  na liniji 19
ERROR 19:03:12,569 - Greska na liniji 19 :  nekompatibilni tipovi u dodeli vrednosti! 
ERROR 19:03:12,570 - Sa nizovima se smeju koristiti samo == i !=  na liniji 20
INFO  19:03:12,570 - Dodela vrednosti  na liniji 20
ERROR 19:03:12,571 - Greska na liniji 20 :  nekompatibilni tipovi u dodeli vrednosti! 
INFO  19:03:12,571 - Obrada IF naredbe  na liniji 20
INFO  19:03:12,571 - Obradjuje se funkcija main na liniji 25
INFO  19:03:12,571 - Deklarisana promenljiva v na liniji 26
ERROR 19:03:12,571 - Funkcija inkrement ocekuje parametre  na liniji 28
INFO  19:03:12,571 - Dodela vrednosti  na liniji 28
INFO  19:03:12,571 -  Print count calls = 0
INFO  19:03:12,571 -  Deklarisanih promenljivih ima = 6
INFO  19:03:12,572 - ===================================
ERROR 19:03:12,572 - Parsiranje neuspesno.
