INFO  16:17:13,744 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:17:13,832 - #3 program
INFO  16:17:13,832 - #45 test302
INFO  16:17:13,832 - #10 const
INFO  16:17:13,834 - #45 int
INFO  16:17:13,835 - #45 jedan
INFO  16:17:13,836 - #11 =
INFO  16:17:13,836 - #44 1
INFO  16:17:13,836 - #9 ;
INFO  16:17:13,838 - #45 int
INFO  16:17:13,838 - #45 i
INFO  16:17:13,839 - #9 ;
INFO  16:17:13,840 - #45 bool
INFO  16:17:13,841 - #45 ibool
INFO  16:17:13,841 - #9 ;
INFO  16:17:13,841 - #45 int
INFO  16:17:13,841 - #45 niz2
INFO  16:17:13,842 - #9 ;
INFO  16:17:13,842 - #16 record
INFO  16:17:13,842 - #45 Test
INFO  16:17:13,843 - #4 {
INFO  16:17:13,843 - #45 int
INFO  16:17:13,845 - #45 niz
INFO  16:17:13,845 - #12 [
INFO  16:17:13,845 - #13 ]
INFO  16:17:13,845 - #9 ;
INFO  16:17:13,845 - #45 int
INFO  16:17:13,846 - #45 a
INFO  16:17:13,846 - #9 ;
INFO  16:17:13,846 - #5 }
INFO  16:17:13,846 - #45 Test
INFO  16:17:13,847 - #45 t1
INFO  16:17:13,847 - #8 ,
INFO  16:17:13,847 - #45 t2
INFO  16:17:13,847 - #9 ;
INFO  16:17:13,848 - #4 {
INFO  16:17:13,848 - #45 int
INFO  16:17:13,849 - #45 sum
INFO  16:17:13,850 - #6 (
INFO  16:17:13,850 - #45 int
INFO  16:17:13,850 - #45 z
INFO  16:17:13,851 - #8 ,
INFO  16:17:13,852 - #45 int
INFO  16:17:13,852 - #45 d
INFO  16:17:13,852 - #7 )
INFO  16:17:13,853 - #4 {
INFO  16:17:13,854 - #43 return
INFO  16:17:13,855 - #45 z
INFO  16:17:13,855 - #26 +
INFO  16:17:13,856 - #45 d
INFO  16:17:13,859 - #9 ;
INFO  16:17:13,859 - #5 }
INFO  16:17:13,860 - #45 int
INFO  16:17:13,861 - #45 inkrement
INFO  16:17:13,861 - #6 (
INFO  16:17:13,861 - #45 int
INFO  16:17:13,861 - #45 a
INFO  16:17:13,862 - #8 ,
INFO  16:17:13,862 - #45 int
INFO  16:17:13,862 - #45 inc
INFO  16:17:13,862 - #7 )
INFO  16:17:13,862 - #45 int
INFO  16:17:13,862 - #45 pom
INFO  16:17:13,863 - #9 ;
INFO  16:17:13,863 - #4 {
INFO  16:17:13,864 - #36 if
INFO  16:17:13,864 - #6 (
INFO  16:17:13,864 - #45 inc
INFO  16:17:13,864 - #2 ==
INFO  16:17:13,864 - #45 jedan
INFO  16:17:13,866 - #7 )
INFO  16:17:13,868 - #45 pom
INFO  16:17:13,868 - #11 =
INFO  16:17:13,868 - #44 1
INFO  16:17:13,869 - #9 ;
INFO  16:17:13,869 - #38 else
INFO  16:17:13,869 - #36 if
INFO  16:17:13,869 - #6 (
INFO  16:17:13,870 - #45 inc
INFO  16:17:13,870 - #2 ==
INFO  16:17:13,871 - #44 2
INFO  16:17:13,871 - #7 )
INFO  16:17:13,871 - #45 pom
INFO  16:17:13,871 - #11 =
INFO  16:17:13,871 - #45 a
INFO  16:17:13,871 - #9 ;
INFO  16:17:13,872 - #43 return
INFO  16:17:13,872 - #45 sum
INFO  16:17:13,872 - #6 (
INFO  16:17:13,873 - #45 a
INFO  16:17:13,873 - #8 ,
INFO  16:17:13,873 - #45 pom
INFO  16:17:13,873 - #7 )
INFO  16:17:13,874 - #9 ;
INFO  16:17:13,874 - #5 }
INFO  16:17:13,874 - #45 bool
INFO  16:17:13,875 - #45 verify
INFO  16:17:13,875 - #6 (
INFO  16:17:13,875 - #7 )
INFO  16:17:13,876 - #4 {
INFO  16:17:13,876 - #23 print
INFO  16:17:13,880 - #6 (
INFO  16:17:13,880 - #47 v
INFO  16:17:13,880 - #7 )
INFO  16:17:13,881 - #9 ;
INFO  16:17:13,881 - #43 return
INFO  16:17:13,881 - #46 false
INFO  16:17:13,882 - #9 ;
