INFO  16:35:36,731 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:35:36,784 - #3 program
INFO  16:35:36,784 - #45 test302
INFO  16:35:36,784 - #10 const
INFO  16:35:36,786 - #45 int
INFO  16:35:36,786 - #45 jedan
INFO  16:35:36,787 - #11 =
INFO  16:35:36,787 - #44 1
INFO  16:35:36,787 - #9 ;
INFO  16:35:36,788 - #45 int
INFO  16:35:36,789 - #45 i
INFO  16:35:36,789 - #9 ;
INFO  16:35:36,789 - #45 bool
INFO  16:35:36,789 - #45 ibool
INFO  16:35:36,790 - #9 ;
INFO  16:35:36,790 - #45 int
INFO  16:35:36,790 - #45 niz2
INFO  16:35:36,790 - #9 ;
INFO  16:35:36,790 - #16 record
INFO  16:35:36,790 - #45 Test
INFO  16:35:36,790 - #4 {
INFO  16:35:36,791 - #45 int
INFO  16:35:36,791 - #45 niz
INFO  16:35:36,791 - #12 [
INFO  16:35:36,791 - #13 ]
INFO  16:35:36,792 - #9 ;
INFO  16:35:36,792 - #45 int
INFO  16:35:36,792 - #45 a
INFO  16:35:36,792 - #9 ;
INFO  16:35:36,792 - #5 }
INFO  16:35:36,792 - #45 Test
INFO  16:35:36,792 - #45 t1
INFO  16:35:36,792 - #8 ,
INFO  16:35:36,792 - #45 t2
INFO  16:35:36,792 - #9 ;
INFO  16:35:36,792 - #4 {
INFO  16:35:36,793 - #45 int
INFO  16:35:36,793 - #45 sum
INFO  16:35:36,793 - #6 (
INFO  16:35:36,793 - #45 int
INFO  16:35:36,793 - #45 z
INFO  16:35:36,793 - #8 ,
INFO  16:35:36,794 - #45 int
INFO  16:35:36,794 - #45 d
INFO  16:35:36,794 - #7 )
INFO  16:35:36,794 - #4 {
INFO  16:35:36,794 - #43 return
INFO  16:35:36,795 - #45 z
INFO  16:35:36,795 - #26 +
INFO  16:35:36,796 - #45 d
INFO  16:35:36,797 - #9 ;
INFO  16:35:36,797 - #5 }
INFO  16:35:36,797 - #45 int
INFO  16:35:36,798 - #45 inkrement
INFO  16:35:36,798 - #6 (
INFO  16:35:36,798 - #45 int
INFO  16:35:36,798 - #45 a
INFO  16:35:36,798 - #8 ,
INFO  16:35:36,798 - #45 int
INFO  16:35:36,798 - #45 inc
INFO  16:35:36,798 - #7 )
INFO  16:35:36,798 - #45 int
INFO  16:35:36,799 - #45 pom
INFO  16:35:36,799 - #9 ;
INFO  16:35:36,799 - #4 {
INFO  16:35:36,799 - #36 if
INFO  16:35:36,799 - #6 (
INFO  16:35:36,799 - #45 inc
INFO  16:35:36,799 - #2 ==
INFO  16:35:36,800 - #45 jedan
INFO  16:35:36,801 - #7 )
INFO  16:35:36,803 - #45 pom
INFO  16:35:36,803 - #11 =
INFO  16:35:36,803 - #44 1
INFO  16:35:36,803 - #9 ;
INFO  16:35:36,803 - #38 else
INFO  16:35:36,804 - #36 if
INFO  16:35:36,804 - #6 (
INFO  16:35:36,804 - #45 inc
INFO  16:35:36,804 - #2 ==
INFO  16:35:36,804 - #44 2
INFO  16:35:36,804 - #7 )
INFO  16:35:36,804 - #45 pom
INFO  16:35:36,804 - #11 =
INFO  16:35:36,804 - #45 a
INFO  16:35:36,805 - #9 ;
INFO  16:35:36,805 - #43 return
INFO  16:35:36,805 - #45 sum
INFO  16:35:36,805 - #6 (
INFO  16:35:36,805 - #45 a
INFO  16:35:36,805 - #8 ,
INFO  16:35:36,806 - #45 pom
INFO  16:35:36,806 - #7 )
INFO  16:35:36,806 - #9 ;
INFO  16:35:36,806 - #5 }
INFO  16:35:36,806 - #45 bool
INFO  16:35:36,806 - #45 verify
INFO  16:35:36,807 - #6 (
INFO  16:35:36,807 - #7 )
INFO  16:35:36,807 - #4 {
INFO  16:35:36,808 - #23 print
INFO  16:35:36,809 - #6 (
INFO  16:35:36,809 - #47 v
INFO  16:35:36,810 - #7 )
INFO  16:35:36,810 - #9 ;
INFO  16:35:36,810 - #43 return
INFO  16:35:36,810 - #46 0
INFO  16:35:36,810 - #9 ;
INFO  16:35:36,810 - #5 }
INFO  16:35:36,810 - #17 void
INFO  16:35:36,810 - #45 main
INFO  16:35:36,811 - #6 (
INFO  16:35:36,811 - #7 )
INFO  16:35:36,811 - #4 {
INFO  16:35:36,811 - #36 if
INFO  16:35:36,811 - #6 (
INFO  16:35:36,812 - #44 1
INFO  16:35:36,812 - #31 !=
INFO  16:35:36,812 - #44 1
INFO  16:35:36,812 - #7 )
INFO  16:35:36,812 - #23 print
INFO  16:35:36,812 - #6 (
INFO  16:35:36,812 - #27 -
INFO  16:35:36,813 - #44 6
INFO  16:35:36,813 - #7 )
INFO  16:35:36,813 - #9 ;
INFO  16:35:36,813 - #38 else
INFO  16:35:36,813 - #23 print
INFO  16:35:36,813 - #6 (
INFO  16:35:36,813 - #44 0
INFO  16:35:36,813 - #7 )
INFO  16:35:36,813 - #9 ;
INFO  16:35:36,813 - #45 ibool
INFO  16:35:36,813 - #11 =
INFO  16:35:36,813 - #46 0
INFO  16:35:36,813 - #9 ;
INFO  16:35:36,814 - #45 i
INFO  16:35:36,814 - #11 =
INFO  16:35:36,814 - #44 0
INFO  16:35:36,814 - #9 ;
INFO  16:35:36,814 - #39 do
INFO  16:35:36,814 - #4 {
INFO  16:35:36,814 - #36 if
INFO  16:35:36,814 - #6 (
INFO  16:35:36,814 - #45 i
INFO  16:35:36,814 - #2 ==
INFO  16:35:36,814 - #44 2
INFO  16:35:36,814 - #7 )
INFO  16:35:36,814 - #45 ibool
INFO  16:35:36,814 - #11 =
INFO  16:35:36,814 - #46 1
INFO  16:35:36,814 - #9 ;
INFO  16:35:36,815 - #45 i
INFO  16:35:36,815 - #18 ++
INFO  16:35:36,815 - #9 ;
INFO  16:35:36,815 - #5 }
INFO  16:35:36,815 - #40 while
INFO  16:35:36,815 - #6 (
INFO  16:35:36,815 - #45 i
INFO  16:35:36,815 - #34 <
INFO  16:35:36,815 - #44 5
INFO  16:35:36,816 - #7 )
INFO  16:35:36,816 - #9 ;
INFO  16:35:36,816 - #36 if
INFO  16:35:36,816 - #6 (
INFO  16:35:36,816 - #45 ibool
INFO  16:35:36,816 - #7 )
INFO  16:35:36,816 - #36 if
INFO  16:35:36,816 - #6 (
INFO  16:35:36,816 - #45 i
INFO  16:35:36,817 - #2 ==
INFO  16:35:36,817 - #44 5
INFO  16:35:36,817 - #7 )
INFO  16:35:36,817 - #23 print
INFO  16:35:36,817 - #6 (
INFO  16:35:36,817 - #44 1
INFO  16:35:36,817 - #7 )
INFO  16:35:36,817 - #9 ;
INFO  16:35:36,817 - #38 else
INFO  16:35:36,817 - #23 print
INFO  16:35:36,817 - #6 (
INFO  16:35:36,817 - #27 -
INFO  16:35:36,817 - #44 1
INFO  16:35:36,817 - #7 )
INFO  16:35:36,817 - #9 ;
INFO  16:35:36,817 - #45 t1
INFO  16:35:36,817 - #11 =
INFO  16:35:36,817 - #25 new
INFO  16:35:36,817 - #45 Test
INFO  16:35:36,818 - #9 ;
INFO  16:35:36,818 - #45 t1
INFO  16:35:36,818 - #20 .
INFO  16:35:36,818 - #45 a
INFO  16:35:36,818 - #11 =
INFO  16:35:36,818 - #44 2
INFO  16:35:36,818 - #9 ;
INFO  16:35:36,818 - #45 t1
INFO  16:35:36,819 - #20 .
INFO  16:35:36,819 - #45 niz
INFO  16:35:36,819 - #11 =
INFO  16:35:36,819 - #25 new
INFO  16:35:36,819 - #45 int
INFO  16:35:36,819 - #12 [
INFO  16:35:36,819 - #44 3
INFO  16:35:36,819 - #13 ]
INFO  16:35:36,819 - #9 ;
INFO  16:35:36,819 - #45 t1
INFO  16:35:36,819 - #20 .
INFO  16:35:36,820 - #45 niz
INFO  16:35:36,820 - #12 [
INFO  16:35:36,820 - #44 0
INFO  16:35:36,820 - #13 ]
INFO  16:35:36,820 - #11 =
INFO  16:35:36,820 - #44 1
INFO  16:35:36,820 - #28 *
INFO  16:35:36,820 - #45 t1
INFO  16:35:36,821 - #20 .
INFO  16:35:36,821 - #45 a
INFO  16:35:36,821 - #9 ;
INFO  16:35:36,822 - #45 t1
INFO  16:35:36,822 - #20 .
INFO  16:35:36,822 - #45 niz
INFO  16:35:36,822 - #12 [
INFO  16:35:36,822 - #44 1
INFO  16:35:36,822 - #13 ]
INFO  16:35:36,822 - #11 =
INFO  16:35:36,822 - #44 2
INFO  16:35:36,823 - #28 *
INFO  16:35:36,823 - #45 t1
INFO  16:35:36,823 - #20 .
INFO  16:35:36,823 - #45 a
INFO  16:35:36,823 - #9 ;
INFO  16:35:36,823 - #45 t1
INFO  16:35:36,823 - #20 .
INFO  16:35:36,823 - #45 niz
INFO  16:35:36,823 - #12 [
INFO  16:35:36,823 - #44 2
INFO  16:35:36,823 - #13 ]
INFO  16:35:36,823 - #11 =
INFO  16:35:36,823 - #45 sum
INFO  16:35:36,823 - #6 (
INFO  16:35:36,823 - #45 t1
INFO  16:35:36,823 - #20 .
INFO  16:35:36,823 - #45 niz
INFO  16:35:36,823 - #12 [
INFO  16:35:36,823 - #44 1
INFO  16:35:36,823 - #13 ]
INFO  16:35:36,824 - #8 ,
INFO  16:35:36,824 - #45 t1
INFO  16:35:36,824 - #20 .
INFO  16:35:36,824 - #45 niz
INFO  16:35:36,824 - #12 [
INFO  16:35:36,824 - #44 0
INFO  16:35:36,824 - #13 ]
INFO  16:35:36,824 - #7 )
INFO  16:35:36,824 - #28 *
INFO  16:35:36,824 - #45 t1
INFO  16:35:36,825 - #20 .
INFO  16:35:36,825 - #45 a
INFO  16:35:36,825 - #26 +
INFO  16:35:36,825 - #44 1
INFO  16:35:36,825 - #9 ;
INFO  16:35:36,825 - #23 print
INFO  16:35:36,825 - #6 (
INFO  16:35:36,825 - #45 ord
INFO  16:35:36,825 - #6 (
INFO  16:35:36,825 - #47 A
INFO  16:35:36,825 - #7 )
INFO  16:35:36,825 - #7 )
INFO  16:35:36,825 - #9 ;
INFO  16:35:36,825 - #23 print
INFO  16:35:36,825 - #6 (
INFO  16:35:36,825 - #45 ord
INFO  16:35:36,825 - #6 (
INFO  16:35:36,825 - #47 a
INFO  16:35:36,825 - #7 )
INFO  16:35:36,825 - #7 )
INFO  16:35:36,825 - #9 ;
INFO  16:35:36,825 - #23 print
INFO  16:35:36,825 - #6 (
INFO  16:35:36,825 - #45 eol
INFO  16:35:36,826 - #7 )
INFO  16:35:36,826 - #9 ;
INFO  16:35:36,826 - #45 i
INFO  16:35:36,826 - #11 =
INFO  16:35:36,826 - #44 0
INFO  16:35:36,826 - #9 ;
INFO  16:35:36,826 - #39 do
INFO  16:35:36,826 - #4 {
INFO  16:35:36,826 - #36 if
INFO  16:35:36,826 - #6 (
INFO  16:35:36,826 - #45 i
INFO  16:35:36,826 - #2 ==
INFO  16:35:36,826 - #44 3
INFO  16:35:36,826 - #7 )
INFO  16:35:36,826 - #4 {
INFO  16:35:36,826 - #45 i
INFO  16:35:36,826 - #18 ++
INFO  16:35:36,827 - #9 ;
INFO  16:35:36,827 - #42 continue
INFO  16:35:36,827 - #9 ;
INFO  16:35:36,827 - #5 }
INFO  16:35:36,827 - #36 if
INFO  16:35:36,827 - #6 (
INFO  16:35:36,827 - #45 i
INFO  16:35:36,827 - #2 ==
INFO  16:35:36,827 - #44 4
INFO  16:35:36,827 - #7 )
INFO  16:35:36,828 - #41 break
INFO  16:35:36,828 - #9 ;
INFO  16:35:36,828 - #45 i
INFO  16:35:36,828 - #11 =
INFO  16:35:36,828 - #45 inkrement
INFO  16:35:36,828 - #6 (
INFO  16:35:36,828 - #45 i
INFO  16:35:36,828 - #8 ,
INFO  16:35:36,828 - #44 1
INFO  16:35:36,828 - #7 )
INFO  16:35:36,828 - #9 ;
INFO  16:35:36,828 - #5 }
INFO  16:35:36,829 - #40 while
INFO  16:35:36,829 - #6 (
INFO  16:35:36,829 - #45 i
INFO  16:35:36,829 - #34 <
INFO  16:35:36,829 - #44 10
INFO  16:35:36,829 - #7 )
INFO  16:35:36,829 - #9 ;
INFO  16:35:36,829 - #36 if
INFO  16:35:36,829 - #6 (
INFO  16:35:36,829 - #45 i
INFO  16:35:36,829 - #2 ==
INFO  16:35:36,829 - #44 3
INFO  16:35:36,829 - #48 &&
INFO  16:35:36,829 - #45 verify
INFO  16:35:36,829 - #6 (
INFO  16:35:36,829 - #7 )
ERROR 16:35:36,829 - 
Sintaksna greska na liniji 76
ERROR 16:35:36,829 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 76
