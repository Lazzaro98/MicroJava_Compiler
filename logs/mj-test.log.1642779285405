INFO  16:24:34,673 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:24:34,747 - #3 program
INFO  16:24:34,747 - #45 test302
INFO  16:24:34,748 - #10 const
INFO  16:24:34,749 - #45 int
INFO  16:24:34,749 - #45 jedan
INFO  16:24:34,750 - #11 =
INFO  16:24:34,750 - #44 1
INFO  16:24:34,750 - #9 ;
INFO  16:24:34,751 - #45 int
INFO  16:24:34,752 - #45 i
INFO  16:24:34,752 - #9 ;
INFO  16:24:34,753 - #45 bool
INFO  16:24:34,753 - #45 ibool
INFO  16:24:34,753 - #9 ;
INFO  16:24:34,753 - #45 int
INFO  16:24:34,753 - #45 niz2
INFO  16:24:34,753 - #9 ;
INFO  16:24:34,753 - #16 record
INFO  16:24:34,753 - #45 Test
INFO  16:24:34,754 - #4 {
INFO  16:24:34,755 - #45 int
INFO  16:24:34,756 - #45 niz
INFO  16:24:34,756 - #12 [
INFO  16:24:34,756 - #13 ]
INFO  16:24:34,756 - #9 ;
INFO  16:24:34,756 - #45 int
INFO  16:24:34,757 - #45 a
INFO  16:24:34,757 - #9 ;
INFO  16:24:34,757 - #5 }
INFO  16:24:34,757 - #45 Test
INFO  16:24:34,757 - #45 t1
INFO  16:24:34,758 - #8 ,
INFO  16:24:34,758 - #45 t2
INFO  16:24:34,758 - #9 ;
INFO  16:24:34,758 - #4 {
INFO  16:24:34,758 - #45 int
INFO  16:24:34,759 - #45 sum
INFO  16:24:34,760 - #6 (
INFO  16:24:34,760 - #45 int
INFO  16:24:34,760 - #45 z
INFO  16:24:34,760 - #8 ,
INFO  16:24:34,761 - #45 int
INFO  16:24:34,762 - #45 d
INFO  16:24:34,762 - #7 )
INFO  16:24:34,762 - #4 {
INFO  16:24:34,762 - #43 return
INFO  16:24:34,763 - #45 z
INFO  16:24:34,763 - #26 +
INFO  16:24:34,764 - #45 d
INFO  16:24:34,765 - #9 ;
INFO  16:24:34,766 - #5 }
INFO  16:24:34,766 - #45 int
INFO  16:24:34,767 - #45 inkrement
INFO  16:24:34,767 - #6 (
INFO  16:24:34,767 - #45 int
INFO  16:24:34,767 - #45 a
INFO  16:24:34,767 - #8 ,
INFO  16:24:34,767 - #45 int
INFO  16:24:34,768 - #45 inc
INFO  16:24:34,768 - #7 )
INFO  16:24:34,768 - #45 int
INFO  16:24:34,768 - #45 pom
INFO  16:24:34,768 - #9 ;
INFO  16:24:34,768 - #4 {
INFO  16:24:34,769 - #36 if
INFO  16:24:34,769 - #6 (
INFO  16:24:34,769 - #45 inc
INFO  16:24:34,769 - #2 ==
INFO  16:24:34,769 - #45 jedan
INFO  16:24:34,771 - #7 )
INFO  16:24:34,773 - #45 pom
INFO  16:24:34,774 - #11 =
INFO  16:24:34,774 - #44 1
INFO  16:24:34,774 - #9 ;
INFO  16:24:34,774 - #38 else
INFO  16:24:34,774 - #36 if
INFO  16:24:34,775 - #6 (
INFO  16:24:34,775 - #45 inc
INFO  16:24:34,775 - #2 ==
INFO  16:24:34,775 - #44 2
INFO  16:24:34,775 - #7 )
INFO  16:24:34,775 - #45 pom
INFO  16:24:34,775 - #11 =
INFO  16:24:34,776 - #45 a
INFO  16:24:34,776 - #9 ;
INFO  16:24:34,776 - #43 return
INFO  16:24:34,776 - #45 sum
INFO  16:24:34,776 - #6 (
INFO  16:24:34,777 - #45 a
INFO  16:24:34,777 - #8 ,
INFO  16:24:34,777 - #45 pom
INFO  16:24:34,777 - #7 )
INFO  16:24:34,777 - #9 ;
INFO  16:24:34,778 - #5 }
INFO  16:24:34,778 - #45 bool
INFO  16:24:34,778 - #45 verify
INFO  16:24:34,778 - #6 (
INFO  16:24:34,778 - #7 )
INFO  16:24:34,779 - #4 {
INFO  16:24:34,779 - #23 print
INFO  16:24:34,781 - #6 (
INFO  16:24:34,782 - #47 v
INFO  16:24:34,782 - #7 )
INFO  16:24:34,782 - #9 ;
INFO  16:24:34,782 - #43 return
INFO  16:24:34,782 - #46 0
INFO  16:24:34,783 - #9 ;
INFO  16:24:34,783 - #5 }
INFO  16:24:34,783 - #17 void
INFO  16:24:34,783 - #45 main
INFO  16:24:34,784 - #6 (
INFO  16:24:34,784 - #7 )
INFO  16:24:34,784 - #4 {
INFO  16:24:34,784 - #36 if
INFO  16:24:34,784 - #6 (
INFO  16:24:34,784 - #44 1
INFO  16:24:34,784 - #31 !=
INFO  16:24:34,784 - #44 1
INFO  16:24:34,785 - #7 )
INFO  16:24:34,785 - #23 print
INFO  16:24:34,785 - #6 (
INFO  16:24:34,785 - #27 -
INFO  16:24:34,786 - #44 6
INFO  16:24:34,786 - #7 )
INFO  16:24:34,786 - #9 ;
INFO  16:24:34,786 - #38 else
INFO  16:24:34,786 - #23 print
INFO  16:24:34,786 - #6 (
INFO  16:24:34,786 - #44 0
INFO  16:24:34,786 - #7 )
INFO  16:24:34,786 - #9 ;
INFO  16:24:34,787 - #45 ibool
INFO  16:24:34,787 - #11 =
INFO  16:24:34,787 - #46 0
INFO  16:24:34,787 - #9 ;
INFO  16:24:34,787 - #45 i
INFO  16:24:34,787 - #11 =
INFO  16:24:34,787 - #44 0
INFO  16:24:34,787 - #9 ;
INFO  16:24:34,787 - #39 do
INFO  16:24:34,787 - #4 {
INFO  16:24:34,787 - #36 if
INFO  16:24:34,788 - #6 (
INFO  16:24:34,788 - #45 i
INFO  16:24:34,788 - #2 ==
INFO  16:24:34,788 - #44 2
INFO  16:24:34,788 - #7 )
INFO  16:24:34,788 - #45 ibool
INFO  16:24:34,788 - #11 =
INFO  16:24:34,788 - #46 1
INFO  16:24:34,788 - #9 ;
INFO  16:24:34,788 - #45 i
INFO  16:24:34,789 - #18 ++
INFO  16:24:34,789 - #9 ;
INFO  16:24:34,789 - #5 }
INFO  16:24:34,789 - #40 while
INFO  16:24:34,789 - #6 (
INFO  16:24:34,789 - #45 i
INFO  16:24:34,789 - #34 <
INFO  16:24:34,789 - #44 5
INFO  16:24:34,790 - #7 )
INFO  16:24:34,790 - #9 ;
INFO  16:24:34,790 - #36 if
INFO  16:24:34,790 - #6 (
INFO  16:24:34,791 - #45 ibool
INFO  16:24:34,791 - #7 )
INFO  16:24:34,791 - #36 if
INFO  16:24:34,791 - #6 (
INFO  16:24:34,791 - #45 i
INFO  16:24:34,791 - #2 ==
INFO  16:24:34,791 - #44 5
INFO  16:24:34,791 - #7 )
INFO  16:24:34,791 - #23 print
INFO  16:24:34,791 - #6 (
INFO  16:24:34,792 - #44 1
INFO  16:24:34,792 - #7 )
INFO  16:24:34,792 - #9 ;
INFO  16:24:34,792 - #38 else
INFO  16:24:34,792 - #23 print
INFO  16:24:34,792 - #6 (
INFO  16:24:34,792 - #27 -
INFO  16:24:34,792 - #44 1
INFO  16:24:34,792 - #7 )
INFO  16:24:34,792 - #9 ;
INFO  16:24:34,792 - #45 t1
INFO  16:24:34,793 - #11 =
INFO  16:24:34,793 - #25 new
INFO  16:24:34,793 - #45 Test
INFO  16:24:34,793 - #9 ;
INFO  16:24:34,793 - #45 t1
INFO  16:24:34,793 - #20 .
ERROR 16:24:34,793 - 
Sintaksna greska na liniji 56
ERROR 16:24:34,793 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 56
