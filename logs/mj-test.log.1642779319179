INFO  16:34:45,411 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:34:45,478 - #3 program
INFO  16:34:45,478 - #45 test302
INFO  16:34:45,479 - #10 const
INFO  16:34:45,481 - #45 int
INFO  16:34:45,481 - #45 jedan
INFO  16:34:45,482 - #11 =
INFO  16:34:45,482 - #44 1
INFO  16:34:45,482 - #9 ;
INFO  16:34:45,483 - #45 int
INFO  16:34:45,484 - #45 i
INFO  16:34:45,484 - #9 ;
INFO  16:34:45,485 - #45 bool
INFO  16:34:45,485 - #45 ibool
INFO  16:34:45,485 - #9 ;
INFO  16:34:45,486 - #45 int
INFO  16:34:45,486 - #45 niz2
INFO  16:34:45,486 - #9 ;
INFO  16:34:45,486 - #16 record
INFO  16:34:45,486 - #45 Test
INFO  16:34:45,486 - #4 {
INFO  16:34:45,488 - #45 int
INFO  16:34:45,488 - #45 niz
INFO  16:34:45,489 - #12 [
INFO  16:34:45,489 - #13 ]
INFO  16:34:45,489 - #9 ;
INFO  16:34:45,489 - #45 int
INFO  16:34:45,489 - #45 a
INFO  16:34:45,489 - #9 ;
INFO  16:34:45,489 - #5 }
INFO  16:34:45,490 - #45 Test
INFO  16:34:45,490 - #45 t1
INFO  16:34:45,490 - #8 ,
INFO  16:34:45,490 - #45 t2
INFO  16:34:45,490 - #9 ;
INFO  16:34:45,490 - #4 {
INFO  16:34:45,491 - #45 int
INFO  16:34:45,491 - #45 sum
INFO  16:34:45,492 - #6 (
INFO  16:34:45,492 - #45 int
INFO  16:34:45,492 - #45 z
INFO  16:34:45,492 - #8 ,
INFO  16:34:45,493 - #45 int
INFO  16:34:45,493 - #45 d
INFO  16:34:45,493 - #7 )
INFO  16:34:45,493 - #4 {
INFO  16:34:45,493 - #43 return
INFO  16:34:45,494 - #45 z
INFO  16:34:45,494 - #26 +
INFO  16:34:45,495 - #45 d
INFO  16:34:45,496 - #9 ;
INFO  16:34:45,496 - #5 }
INFO  16:34:45,496 - #45 int
INFO  16:34:45,497 - #45 inkrement
INFO  16:34:45,497 - #6 (
INFO  16:34:45,497 - #45 int
INFO  16:34:45,497 - #45 a
INFO  16:34:45,497 - #8 ,
INFO  16:34:45,497 - #45 int
INFO  16:34:45,497 - #45 inc
INFO  16:34:45,497 - #7 )
INFO  16:34:45,497 - #45 int
INFO  16:34:45,497 - #45 pom
INFO  16:34:45,497 - #9 ;
INFO  16:34:45,498 - #4 {
INFO  16:34:45,498 - #36 if
INFO  16:34:45,498 - #6 (
INFO  16:34:45,498 - #45 inc
INFO  16:34:45,498 - #2 ==
INFO  16:34:45,498 - #45 jedan
INFO  16:34:45,499 - #7 )
INFO  16:34:45,501 - #45 pom
INFO  16:34:45,501 - #11 =
INFO  16:34:45,501 - #44 1
INFO  16:34:45,501 - #9 ;
INFO  16:34:45,502 - #38 else
INFO  16:34:45,502 - #36 if
INFO  16:34:45,502 - #6 (
INFO  16:34:45,502 - #45 inc
INFO  16:34:45,502 - #2 ==
INFO  16:34:45,502 - #44 2
INFO  16:34:45,502 - #7 )
INFO  16:34:45,502 - #45 pom
INFO  16:34:45,503 - #11 =
INFO  16:34:45,503 - #45 a
INFO  16:34:45,503 - #9 ;
INFO  16:34:45,503 - #43 return
INFO  16:34:45,503 - #45 sum
INFO  16:34:45,503 - #6 (
INFO  16:34:45,504 - #45 a
INFO  16:34:45,504 - #8 ,
INFO  16:34:45,504 - #45 pom
INFO  16:34:45,504 - #7 )
INFO  16:34:45,504 - #9 ;
INFO  16:34:45,505 - #5 }
INFO  16:34:45,505 - #45 bool
INFO  16:34:45,505 - #45 verify
INFO  16:34:45,505 - #6 (
INFO  16:34:45,505 - #7 )
INFO  16:34:45,506 - #4 {
INFO  16:34:45,506 - #23 print
INFO  16:34:45,509 - #6 (
INFO  16:34:45,509 - #47 v
INFO  16:34:45,509 - #7 )
INFO  16:34:45,509 - #9 ;
INFO  16:34:45,509 - #43 return
INFO  16:34:45,509 - #46 0
INFO  16:34:45,510 - #9 ;
INFO  16:34:45,510 - #5 }
INFO  16:34:45,510 - #17 void
INFO  16:34:45,510 - #45 main
INFO  16:34:45,511 - #6 (
INFO  16:34:45,511 - #7 )
INFO  16:34:45,511 - #4 {
INFO  16:34:45,511 - #36 if
INFO  16:34:45,511 - #6 (
INFO  16:34:45,511 - #44 1
INFO  16:34:45,511 - #31 !=
INFO  16:34:45,512 - #44 1
INFO  16:34:45,512 - #7 )
INFO  16:34:45,513 - #23 print
INFO  16:34:45,513 - #6 (
INFO  16:34:45,513 - #27 -
INFO  16:34:45,513 - #44 6
INFO  16:34:45,513 - #7 )
INFO  16:34:45,513 - #9 ;
INFO  16:34:45,513 - #38 else
INFO  16:34:45,513 - #23 print
INFO  16:34:45,513 - #6 (
INFO  16:34:45,514 - #44 0
INFO  16:34:45,514 - #7 )
INFO  16:34:45,514 - #9 ;
INFO  16:34:45,514 - #45 ibool
INFO  16:34:45,514 - #11 =
INFO  16:34:45,514 - #46 0
INFO  16:34:45,514 - #9 ;
INFO  16:34:45,514 - #45 i
INFO  16:34:45,514 - #11 =
INFO  16:34:45,514 - #44 0
INFO  16:34:45,515 - #9 ;
INFO  16:34:45,515 - #39 do
INFO  16:34:45,515 - #4 {
INFO  16:34:45,515 - #36 if
INFO  16:34:45,515 - #6 (
INFO  16:34:45,515 - #45 i
INFO  16:34:45,515 - #2 ==
INFO  16:34:45,515 - #44 2
INFO  16:34:45,515 - #7 )
INFO  16:34:45,515 - #45 ibool
INFO  16:34:45,515 - #11 =
INFO  16:34:45,515 - #46 1
INFO  16:34:45,516 - #9 ;
INFO  16:34:45,516 - #45 i
INFO  16:34:45,516 - #18 ++
INFO  16:34:45,516 - #9 ;
INFO  16:34:45,516 - #5 }
INFO  16:34:45,516 - #40 while
INFO  16:34:45,516 - #6 (
INFO  16:34:45,516 - #45 i
INFO  16:34:45,516 - #34 <
INFO  16:34:45,517 - #44 5
INFO  16:34:45,517 - #7 )
INFO  16:34:45,517 - #9 ;
INFO  16:34:45,517 - #36 if
INFO  16:34:45,518 - #6 (
INFO  16:34:45,518 - #45 ibool
INFO  16:34:45,518 - #7 )
INFO  16:34:45,518 - #36 if
INFO  16:34:45,518 - #6 (
INFO  16:34:45,518 - #45 i
INFO  16:34:45,518 - #2 ==
INFO  16:34:45,518 - #44 5
INFO  16:34:45,519 - #7 )
INFO  16:34:45,519 - #23 print
INFO  16:34:45,519 - #6 (
INFO  16:34:45,519 - #44 1
INFO  16:34:45,519 - #7 )
INFO  16:34:45,519 - #9 ;
INFO  16:34:45,519 - #38 else
INFO  16:34:45,519 - #23 print
INFO  16:34:45,519 - #6 (
INFO  16:34:45,520 - #27 -
INFO  16:34:45,520 - #44 1
INFO  16:34:45,520 - #7 )
INFO  16:34:45,520 - #9 ;
INFO  16:34:45,520 - #45 t1
INFO  16:34:45,520 - #11 =
INFO  16:34:45,520 - #25 new
INFO  16:34:45,520 - #45 Test
INFO  16:34:45,520 - #9 ;
INFO  16:34:45,521 - #45 t1
INFO  16:34:45,521 - #20 .
INFO  16:34:45,521 - #45 a
INFO  16:34:45,521 - #11 =
INFO  16:34:45,521 - #44 2
INFO  16:34:45,521 - #9 ;
INFO  16:34:45,522 - #45 t1
INFO  16:34:45,522 - #20 .
INFO  16:34:45,522 - #45 niz
INFO  16:34:45,522 - #11 =
INFO  16:34:45,522 - #25 new
INFO  16:34:45,522 - #45 int
INFO  16:34:45,522 - #12 [
INFO  16:34:45,522 - #44 3
INFO  16:34:45,522 - #13 ]
INFO  16:34:45,522 - #9 ;
INFO  16:34:45,523 - #45 t1
INFO  16:34:45,523 - #20 .
INFO  16:34:45,523 - #45 niz
INFO  16:34:45,523 - #12 [
INFO  16:34:45,523 - #44 0
INFO  16:34:45,523 - #13 ]
INFO  16:34:45,523 - #11 =
INFO  16:34:45,523 - #44 1
INFO  16:34:45,523 - #28 *
INFO  16:34:45,523 - #45 t1
INFO  16:34:45,524 - #20 .
INFO  16:34:45,524 - #45 a
INFO  16:34:45,524 - #9 ;
INFO  16:34:45,524 - #45 t1
INFO  16:34:45,525 - #20 .
INFO  16:34:45,525 - #45 niz
INFO  16:34:45,525 - #12 [
INFO  16:34:45,525 - #44 1
INFO  16:34:45,525 - #13 ]
INFO  16:34:45,525 - #11 =
INFO  16:34:45,525 - #44 2
INFO  16:34:45,525 - #28 *
INFO  16:34:45,525 - #45 t1
INFO  16:34:45,525 - #20 .
INFO  16:34:45,525 - #45 a
INFO  16:34:45,525 - #9 ;
INFO  16:34:45,525 - #45 t1
INFO  16:34:45,525 - #20 .
INFO  16:34:45,525 - #45 niz
INFO  16:34:45,525 - #12 [
INFO  16:34:45,525 - #44 2
INFO  16:34:45,525 - #13 ]
INFO  16:34:45,525 - #11 =
INFO  16:34:45,525 - #45 sum
INFO  16:34:45,525 - #6 (
INFO  16:34:45,525 - #45 t1
INFO  16:34:45,525 - #20 .
INFO  16:34:45,526 - #45 niz
INFO  16:34:45,526 - #12 [
INFO  16:34:45,526 - #44 1
INFO  16:34:45,526 - #13 ]
INFO  16:34:45,526 - #8 ,
INFO  16:34:45,526 - #45 t1
INFO  16:34:45,526 - #20 .
INFO  16:34:45,526 - #45 niz
INFO  16:34:45,526 - #12 [
INFO  16:34:45,526 - #44 0
INFO  16:34:45,526 - #13 ]
INFO  16:34:45,526 - #7 )
INFO  16:34:45,527 - #28 *
INFO  16:34:45,528 - #45 t1
INFO  16:34:45,528 - #20 .
INFO  16:34:45,528 - #45 a
INFO  16:34:45,528 - #26 +
INFO  16:34:45,528 - #44 1
INFO  16:34:45,528 - #9 ;
INFO  16:34:45,529 - #36 if
INFO  16:34:45,529 - #6 (
INFO  16:34:45,529 - #45 verify
INFO  16:34:45,529 - #6 (
INFO  16:34:45,529 - #7 )
ERROR 16:34:45,529 - 
Sintaksna greska na liniji 61
ERROR 16:34:45,529 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
