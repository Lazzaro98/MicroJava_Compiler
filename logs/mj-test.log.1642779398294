INFO  16:36:21,627 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:36:21,686 - #3 program
INFO  16:36:21,687 - #45 test302
INFO  16:36:21,687 - #10 const
INFO  16:36:21,689 - #45 int
INFO  16:36:21,689 - #45 jedan
INFO  16:36:21,691 - #11 =
INFO  16:36:21,692 - #44 1
INFO  16:36:21,692 - #9 ;
INFO  16:36:21,693 - #45 int
INFO  16:36:21,693 - #45 i
INFO  16:36:21,693 - #9 ;
INFO  16:36:21,693 - #45 bool
INFO  16:36:21,694 - #45 ibool
INFO  16:36:21,694 - #9 ;
INFO  16:36:21,694 - #45 int
INFO  16:36:21,694 - #45 niz2
INFO  16:36:21,694 - #9 ;
INFO  16:36:21,694 - #16 record
INFO  16:36:21,694 - #45 Test
INFO  16:36:21,695 - #4 {
INFO  16:36:21,696 - #45 int
INFO  16:36:21,696 - #45 niz
INFO  16:36:21,696 - #12 [
INFO  16:36:21,696 - #13 ]
INFO  16:36:21,696 - #9 ;
INFO  16:36:21,697 - #45 int
INFO  16:36:21,697 - #45 a
INFO  16:36:21,697 - #9 ;
INFO  16:36:21,697 - #5 }
INFO  16:36:21,697 - #45 Test
INFO  16:36:21,698 - #45 t1
INFO  16:36:21,698 - #8 ,
INFO  16:36:21,698 - #45 t2
INFO  16:36:21,698 - #9 ;
INFO  16:36:21,698 - #4 {
INFO  16:36:21,698 - #45 int
INFO  16:36:21,699 - #45 sum
INFO  16:36:21,700 - #6 (
INFO  16:36:21,700 - #45 int
INFO  16:36:21,700 - #45 z
INFO  16:36:21,700 - #8 ,
INFO  16:36:21,701 - #45 int
INFO  16:36:21,701 - #45 d
INFO  16:36:21,701 - #7 )
INFO  16:36:21,702 - #4 {
INFO  16:36:21,702 - #43 return
INFO  16:36:21,702 - #45 z
INFO  16:36:21,702 - #26 +
INFO  16:36:21,704 - #45 d
INFO  16:36:21,705 - #9 ;
INFO  16:36:21,705 - #5 }
INFO  16:36:21,706 - #45 int
INFO  16:36:21,706 - #45 inkrement
INFO  16:36:21,706 - #6 (
INFO  16:36:21,706 - #45 int
INFO  16:36:21,706 - #45 a
INFO  16:36:21,707 - #8 ,
INFO  16:36:21,707 - #45 int
INFO  16:36:21,707 - #45 inc
INFO  16:36:21,707 - #7 )
INFO  16:36:21,707 - #45 int
INFO  16:36:21,707 - #45 pom
INFO  16:36:21,708 - #9 ;
INFO  16:36:21,708 - #4 {
INFO  16:36:21,708 - #36 if
INFO  16:36:21,709 - #6 (
INFO  16:36:21,709 - #45 inc
INFO  16:36:21,709 - #2 ==
INFO  16:36:21,709 - #45 jedan
INFO  16:36:21,711 - #7 )
INFO  16:36:21,713 - #45 pom
INFO  16:36:21,713 - #11 =
INFO  16:36:21,713 - #44 1
INFO  16:36:21,713 - #9 ;
INFO  16:36:21,713 - #38 else
INFO  16:36:21,714 - #36 if
INFO  16:36:21,714 - #6 (
INFO  16:36:21,714 - #45 inc
INFO  16:36:21,714 - #2 ==
INFO  16:36:21,714 - #44 2
INFO  16:36:21,714 - #7 )
INFO  16:36:21,714 - #45 pom
INFO  16:36:21,714 - #11 =
INFO  16:36:21,714 - #45 a
INFO  16:36:21,714 - #9 ;
INFO  16:36:21,714 - #43 return
INFO  16:36:21,715 - #45 sum
INFO  16:36:21,715 - #6 (
INFO  16:36:21,715 - #45 a
INFO  16:36:21,715 - #8 ,
INFO  16:36:21,715 - #45 pom
INFO  16:36:21,716 - #7 )
INFO  16:36:21,716 - #9 ;
INFO  16:36:21,716 - #5 }
INFO  16:36:21,716 - #45 bool
INFO  16:36:21,716 - #45 verify
INFO  16:36:21,716 - #6 (
INFO  16:36:21,716 - #7 )
INFO  16:36:21,717 - #4 {
INFO  16:36:21,717 - #23 print
INFO  16:36:21,719 - #6 (
INFO  16:36:21,719 - #47 v
INFO  16:36:21,719 - #7 )
INFO  16:36:21,720 - #9 ;
INFO  16:36:21,720 - #43 return
INFO  16:36:21,720 - #46 0
INFO  16:36:21,720 - #9 ;
INFO  16:36:21,720 - #5 }
INFO  16:36:21,720 - #17 void
INFO  16:36:21,720 - #45 main
INFO  16:36:21,721 - #6 (
INFO  16:36:21,721 - #7 )
INFO  16:36:21,721 - #4 {
INFO  16:36:21,721 - #36 if
INFO  16:36:21,721 - #6 (
INFO  16:36:21,721 - #44 1
INFO  16:36:21,721 - #31 !=
INFO  16:36:21,721 - #44 1
INFO  16:36:21,721 - #7 )
INFO  16:36:21,722 - #23 print
INFO  16:36:21,722 - #6 (
INFO  16:36:21,722 - #27 -
INFO  16:36:21,722 - #44 6
INFO  16:36:21,722 - #7 )
INFO  16:36:21,722 - #9 ;
INFO  16:36:21,722 - #38 else
INFO  16:36:21,722 - #23 print
INFO  16:36:21,722 - #6 (
INFO  16:36:21,722 - #44 0
INFO  16:36:21,722 - #7 )
INFO  16:36:21,722 - #9 ;
INFO  16:36:21,722 - #45 ibool
INFO  16:36:21,722 - #11 =
INFO  16:36:21,722 - #46 0
INFO  16:36:21,722 - #9 ;
INFO  16:36:21,723 - #45 i
INFO  16:36:21,723 - #11 =
INFO  16:36:21,723 - #44 0
INFO  16:36:21,723 - #9 ;
INFO  16:36:21,723 - #39 do
INFO  16:36:21,723 - #4 {
INFO  16:36:21,723 - #36 if
INFO  16:36:21,723 - #6 (
INFO  16:36:21,723 - #45 i
INFO  16:36:21,723 - #2 ==
INFO  16:36:21,723 - #44 2
INFO  16:36:21,723 - #7 )
INFO  16:36:21,723 - #45 ibool
INFO  16:36:21,723 - #11 =
INFO  16:36:21,723 - #46 1
INFO  16:36:21,723 - #9 ;
INFO  16:36:21,724 - #45 i
INFO  16:36:21,724 - #18 ++
INFO  16:36:21,724 - #9 ;
INFO  16:36:21,724 - #5 }
INFO  16:36:21,724 - #40 while
INFO  16:36:21,724 - #6 (
INFO  16:36:21,725 - #45 i
INFO  16:36:21,725 - #34 <
INFO  16:36:21,725 - #44 5
INFO  16:36:21,725 - #7 )
INFO  16:36:21,725 - #9 ;
INFO  16:36:21,726 - #36 if
INFO  16:36:21,726 - #6 (
INFO  16:36:21,726 - #45 ibool
INFO  16:36:21,726 - #7 )
INFO  16:36:21,726 - #36 if
INFO  16:36:21,726 - #6 (
INFO  16:36:21,726 - #45 i
INFO  16:36:21,726 - #2 ==
INFO  16:36:21,726 - #44 5
INFO  16:36:21,727 - #7 )
INFO  16:36:21,727 - #23 print
INFO  16:36:21,727 - #6 (
INFO  16:36:21,727 - #44 1
INFO  16:36:21,727 - #7 )
INFO  16:36:21,727 - #9 ;
INFO  16:36:21,727 - #38 else
INFO  16:36:21,727 - #23 print
INFO  16:36:21,727 - #6 (
INFO  16:36:21,727 - #27 -
INFO  16:36:21,727 - #44 1
INFO  16:36:21,727 - #7 )
INFO  16:36:21,727 - #9 ;
INFO  16:36:21,727 - #45 t1
INFO  16:36:21,727 - #11 =
INFO  16:36:21,728 - #25 new
INFO  16:36:21,728 - #45 Test
INFO  16:36:21,728 - #9 ;
INFO  16:36:21,728 - #45 t1
INFO  16:36:21,728 - #20 .
INFO  16:36:21,728 - #45 a
INFO  16:36:21,728 - #11 =
INFO  16:36:21,728 - #44 2
INFO  16:36:21,728 - #9 ;
INFO  16:36:21,728 - #45 t1
INFO  16:36:21,728 - #20 .
INFO  16:36:21,729 - #45 niz
INFO  16:36:21,729 - #11 =
INFO  16:36:21,729 - #25 new
INFO  16:36:21,729 - #45 int
INFO  16:36:21,729 - #12 [
INFO  16:36:21,729 - #44 3
INFO  16:36:21,729 - #13 ]
INFO  16:36:21,729 - #9 ;
INFO  16:36:21,729 - #45 t1
INFO  16:36:21,729 - #20 .
INFO  16:36:21,729 - #45 niz
INFO  16:36:21,729 - #12 [
INFO  16:36:21,729 - #44 0
INFO  16:36:21,729 - #13 ]
INFO  16:36:21,729 - #11 =
INFO  16:36:21,730 - #44 1
INFO  16:36:21,730 - #28 *
INFO  16:36:21,730 - #45 t1
INFO  16:36:21,731 - #20 .
INFO  16:36:21,731 - #45 a
INFO  16:36:21,731 - #9 ;
INFO  16:36:21,731 - #45 t1
INFO  16:36:21,731 - #20 .
INFO  16:36:21,731 - #45 niz
INFO  16:36:21,731 - #12 [
INFO  16:36:21,731 - #44 1
INFO  16:36:21,731 - #13 ]
INFO  16:36:21,731 - #11 =
INFO  16:36:21,731 - #44 2
INFO  16:36:21,732 - #28 *
INFO  16:36:21,732 - #45 t1
INFO  16:36:21,732 - #20 .
INFO  16:36:21,732 - #45 a
INFO  16:36:21,732 - #9 ;
INFO  16:36:21,732 - #45 t1
INFO  16:36:21,732 - #20 .
INFO  16:36:21,732 - #45 niz
INFO  16:36:21,732 - #12 [
INFO  16:36:21,732 - #44 2
INFO  16:36:21,732 - #13 ]
INFO  16:36:21,732 - #11 =
INFO  16:36:21,732 - #45 sum
INFO  16:36:21,732 - #6 (
INFO  16:36:21,732 - #45 t1
INFO  16:36:21,732 - #20 .
INFO  16:36:21,733 - #45 niz
INFO  16:36:21,733 - #12 [
INFO  16:36:21,733 - #44 1
INFO  16:36:21,733 - #13 ]
INFO  16:36:21,733 - #8 ,
INFO  16:36:21,733 - #45 t1
INFO  16:36:21,733 - #20 .
INFO  16:36:21,733 - #45 niz
INFO  16:36:21,733 - #12 [
INFO  16:36:21,733 - #44 0
INFO  16:36:21,733 - #13 ]
INFO  16:36:21,733 - #7 )
INFO  16:36:21,734 - #28 *
INFO  16:36:21,734 - #45 t1
INFO  16:36:21,734 - #20 .
INFO  16:36:21,734 - #45 a
INFO  16:36:21,734 - #26 +
INFO  16:36:21,735 - #44 1
INFO  16:36:21,735 - #9 ;
INFO  16:36:21,735 - #23 print
INFO  16:36:21,735 - #6 (
INFO  16:36:21,735 - #45 ord
INFO  16:36:21,735 - #6 (
INFO  16:36:21,735 - #47 A
INFO  16:36:21,735 - #7 )
INFO  16:36:21,735 - #7 )
INFO  16:36:21,735 - #9 ;
INFO  16:36:21,735 - #23 print
INFO  16:36:21,736 - #6 (
INFO  16:36:21,736 - #45 ord
INFO  16:36:21,736 - #6 (
INFO  16:36:21,736 - #47 a
INFO  16:36:21,736 - #7 )
INFO  16:36:21,736 - #7 )
INFO  16:36:21,736 - #9 ;
INFO  16:36:21,736 - #23 print
INFO  16:36:21,736 - #6 (
INFO  16:36:21,736 - #45 eol
INFO  16:36:21,736 - #7 )
INFO  16:36:21,737 - #9 ;
INFO  16:36:21,737 - #45 i
INFO  16:36:21,737 - #11 =
INFO  16:36:21,737 - #44 0
INFO  16:36:21,737 - #9 ;
INFO  16:36:21,737 - #39 do
INFO  16:36:21,737 - #4 {
INFO  16:36:21,737 - #36 if
INFO  16:36:21,737 - #6 (
INFO  16:36:21,737 - #45 i
INFO  16:36:21,737 - #2 ==
INFO  16:36:21,738 - #44 3
INFO  16:36:21,738 - #7 )
INFO  16:36:21,738 - #4 {
INFO  16:36:21,738 - #45 i
INFO  16:36:21,738 - #18 ++
INFO  16:36:21,738 - #9 ;
INFO  16:36:21,738 - #42 continue
INFO  16:36:21,738 - #9 ;
INFO  16:36:21,738 - #5 }
INFO  16:36:21,739 - #36 if
INFO  16:36:21,739 - #6 (
INFO  16:36:21,739 - #45 i
INFO  16:36:21,739 - #2 ==
INFO  16:36:21,739 - #44 4
INFO  16:36:21,739 - #7 )
INFO  16:36:21,739 - #41 break
INFO  16:36:21,739 - #9 ;
INFO  16:36:21,739 - #45 i
INFO  16:36:21,740 - #11 =
INFO  16:36:21,740 - #45 inkrement
INFO  16:36:21,740 - #6 (
INFO  16:36:21,740 - #45 i
INFO  16:36:21,740 - #8 ,
INFO  16:36:21,740 - #44 1
INFO  16:36:21,740 - #7 )
INFO  16:36:21,740 - #9 ;
INFO  16:36:21,740 - #5 }
INFO  16:36:21,740 - #40 while
INFO  16:36:21,740 - #6 (
INFO  16:36:21,740 - #45 i
INFO  16:36:21,740 - #34 <
INFO  16:36:21,740 - #44 10
INFO  16:36:21,740 - #7 )
INFO  16:36:21,740 - #9 ;
INFO  16:36:21,740 - #36 if
INFO  16:36:21,740 - #6 (
INFO  16:36:21,740 - #45 i
INFO  16:36:21,741 - #2 ==
INFO  16:36:21,741 - #44 3
INFO  16:36:21,741 - #48 &&
INFO  16:36:21,741 - #45 verify
INFO  16:36:21,741 - #6 (
INFO  16:36:21,741 - #7 )
ERROR 16:36:21,741 - 
Sintaksna greska na liniji 76
ERROR 16:36:21,741 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 76
