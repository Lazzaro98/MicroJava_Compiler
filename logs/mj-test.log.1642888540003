INFO  22:55:23,108 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  22:55:23,164 - #3 program
INFO  22:55:23,165 - #45 test301
INFO  22:55:23,165 - #10 const
INFO  22:55:23,166 - #45 int
INFO  22:55:23,166 - #45 nula
INFO  22:55:23,167 - #11 =
INFO  22:55:23,167 - #44 0
INFO  22:55:23,167 - #9 ;
INFO  22:55:23,168 - #10 const
INFO  22:55:23,168 - #45 int
INFO  22:55:23,168 - #45 jedan
INFO  22:55:23,168 - #11 =
INFO  22:55:23,168 - #44 1
INFO  22:55:23,169 - #9 ;
INFO  22:55:23,169 - #10 const
INFO  22:55:23,169 - #45 int
INFO  22:55:23,169 - #45 pet
INFO  22:55:23,169 - #11 =
INFO  22:55:23,169 - #44 5
INFO  22:55:23,169 - #9 ;
INFO  22:55:23,173 - #45 int
INFO  22:55:23,173 - #45 niz
INFO  22:55:23,174 - #12 [
INFO  22:55:23,174 - #13 ]
INFO  22:55:23,174 - #9 ;
INFO  22:55:23,175 - #45 char
INFO  22:55:23,175 - #45 nizch
INFO  22:55:23,175 - #12 [
INFO  22:55:23,175 - #13 ]
INFO  22:55:23,175 - #9 ;
INFO  22:55:23,175 - #16 record
INFO  22:55:23,175 - #45 TestRecord
INFO  22:55:23,175 - #4 {
INFO  22:55:23,176 - #45 int
INFO  22:55:23,176 - #45 p
INFO  22:55:23,176 - #9 ;
INFO  22:55:23,177 - #5 }
INFO  22:55:23,177 - #45 TestRecord
INFO  22:55:23,177 - #45 t1
INFO  22:55:23,177 - #9 ;
INFO  22:55:23,177 - #45 int
INFO  22:55:23,178 - #45 x
INFO  22:55:23,178 - #9 ;
INFO  22:55:23,178 - #4 {
INFO  22:55:23,178 - #45 int
INFO  22:55:23,179 - #45 sum
INFO  22:55:23,179 - #6 (
INFO  22:55:23,179 - #45 int
INFO  22:55:23,179 - #45 z
INFO  22:55:23,179 - #8 ,
INFO  22:55:23,180 - #45 int
INFO  22:55:23,180 - #45 d
INFO  22:55:23,180 - #7 )
INFO  22:55:23,181 - #4 {
INFO  22:55:23,181 - #43 return
INFO  22:55:23,181 - #44 2
INFO  22:55:23,182 - #26 +
INFO  22:55:23,182 - #44 5
INFO  22:55:23,183 - #9 ;
INFO  22:55:23,184 - #5 }
INFO  22:55:23,184 - #45 int
INFO  22:55:23,184 - #45 inkrement
INFO  22:55:23,184 - #6 (
INFO  22:55:23,185 - #45 int
INFO  22:55:23,185 - #45 a
INFO  22:55:23,185 - #8 ,
INFO  22:55:23,185 - #45 int
INFO  22:55:23,185 - #45 inc
INFO  22:55:23,185 - #7 )
INFO  22:55:23,185 - #45 int
INFO  22:55:23,185 - #45 pom
INFO  22:55:23,185 - #9 ;
INFO  22:55:23,185 - #4 {
INFO  22:55:23,185 - #36 if
INFO  22:55:23,185 - #6 (
INFO  22:55:23,185 - #45 inc
INFO  22:55:23,185 - #2 ==
INFO  22:55:23,187 - #45 jedan
INFO  22:55:23,188 - #7 )
INFO  22:55:23,190 - #45 pom
INFO  22:55:23,190 - #11 =
INFO  22:55:23,190 - #44 1
INFO  22:55:23,190 - #9 ;
INFO  22:55:23,190 - #38 else
INFO  22:55:23,190 - #36 if
INFO  22:55:23,191 - #6 (
INFO  22:55:23,191 - #45 inc
INFO  22:55:23,191 - #2 ==
INFO  22:55:23,191 - #44 2
INFO  22:55:23,191 - #7 )
INFO  22:55:23,191 - #45 pom
INFO  22:55:23,191 - #11 =
INFO  22:55:23,191 - #45 a
INFO  22:55:23,191 - #9 ;
INFO  22:55:23,191 - #43 return
INFO  22:55:23,192 - #45 sum
INFO  22:55:23,192 - #6 (
INFO  22:55:23,192 - #45 a
INFO  22:55:23,192 - #8 ,
INFO  22:55:23,192 - #45 pom
INFO  22:55:23,192 - #7 )
INFO  22:55:23,192 - #9 ;
INFO  22:55:23,193 - #5 }
INFO  22:55:23,193 - #17 void
INFO  22:55:23,193 - #45 main
INFO  22:55:23,193 - #6 (
INFO  22:55:23,193 - #7 )
INFO  22:55:23,193 - #45 int
INFO  22:55:23,194 - #45 bodovi
INFO  22:55:23,194 - #9 ;
INFO  22:55:23,194 - #4 {
INFO  22:55:23,194 - #45 sum
INFO  22:55:23,194 - #6 (
INFO  22:55:23,194 - #7 )
INFO  22:55:23,194 - #9 ;
INFO  22:55:23,194 - #5 }
INFO  22:55:23,194 - #5 }
INFO  22:55:23,204 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  DeclarationListProgram(
    DeclarationListProgram(
      DeclarationListProgram(
        DeclarationListProgram(
          DeclarationListProgram(
            DeclarationListProgram(
              DeclarationListProgram(
                DeclarationListProgram(
                  DeclarationListProgramEmpty(
                  ) [DeclarationListProgramEmpty]
                  DeclarationConst(
                    ConstDeclaration(
                      Type(
                       int
                      ) [Type]
                     nula
                      NumConstDeclaration(
                       0
                      ) [NumConstDeclaration]
                      ConstDeclarationPomListEmpty(
                      ) [ConstDeclarationPomListEmpty]
                    ) [ConstDeclaration]
                  ) [DeclarationConst]
                ) [DeclarationListProgram]
                DeclarationConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                   jedan
                    NumConstDeclaration(
                     1
                    ) [NumConstDeclaration]
                    ConstDeclarationPomListEmpty(
                    ) [ConstDeclarationPomListEmpty]
                  ) [ConstDeclaration]
                ) [DeclarationConst]
              ) [DeclarationListProgram]
              DeclarationConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                 pet
                  NumConstDeclaration(
                   5
                  ) [NumConstDeclaration]
                  ConstDeclarationPomListEmpty(
                  ) [ConstDeclarationPomListEmpty]
                ) [ConstDeclaration]
              ) [DeclarationConst]
            ) [DeclarationListProgram]
            DeclarationVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
               niz
                Squares(
                ) [Squares]
                VarDeclarationListPomEmpty(
                ) [VarDeclarationListPomEmpty]
              ) [VarDeclaration]
            ) [DeclarationVar]
          ) [DeclarationListProgram]
          DeclarationVar(
            VarDeclaration(
              Type(
               char
              ) [Type]
             nizch
              Squares(
              ) [Squares]
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [DeclarationVar]
        ) [DeclarationListProgram]
        DeclarationRecord(
          RecordDeclaration(
            RecordDeclarationName(
             TestRecord
            ) [RecordDeclarationName]
            VarDeclarationList(
              VarDeclarationListEmpty(
              ) [VarDeclarationListEmpty]
              VarDeclaration(
                Type(
                 int
                ) [Type]
               p
                NoSquares(
                ) [NoSquares]
                VarDeclarationListPomEmpty(
                ) [VarDeclarationListPomEmpty]
              ) [VarDeclaration]
            ) [VarDeclarationList]
          ) [RecordDeclaration]
        ) [DeclarationRecord]
      ) [DeclarationListProgram]
      DeclarationVar(
        VarDeclaration(
          Type(
           TestRecord
          ) [Type]
         t1
          NoSquares(
          ) [NoSquares]
          VarDeclarationListPomEmpty(
          ) [VarDeclarationListPomEmpty]
        ) [VarDeclaration]
      ) [DeclarationVar]
    ) [DeclarationListProgram]
    DeclarationVar(
      VarDeclaration(
        Type(
         int
        ) [Type]
       x
        NoSquares(
        ) [NoSquares]
        VarDeclarationListPomEmpty(
        ) [VarDeclarationListPomEmpty]
      ) [VarDeclaration]
    ) [DeclarationVar]
  ) [DeclarationListProgram]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationListEmpty(
        ) [MethodDeclarationListEmpty]
        MethodDeclaration(
          MethodTypeName_(
            Type(
             int
            ) [Type]
           sum
          ) [MethodTypeName_]
          FormalParams(
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             z
            ) [FormalParamsSingleSquare]
            FormalParamsListPom(
              FormalParamsListPomEmpty(
              ) [FormalParamsListPomEmpty]
              FormalParamsSingleSquare(
                Type(
                 int
                ) [Type]
               d
              ) [FormalParamsSingleSquare]
            ) [FormalParamsListPom]
          ) [FormalParams]
          VarDeclarationListEmpty(
          ) [VarDeclarationListEmpty]
          ListStatement(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              StatementReturn(
                AddExpr(
                  TermExpr(
                    TermSingleFactor(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingleFactor]
                  ) [TermExpr]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingleFactor(
                    FactorNumConst(
                     5
                    ) [FactorNumConst]
                  ) [TermSingleFactor]
                ) [AddExpr]
              ) [StatementReturn]
            ) [MatchedStmt]
          ) [ListStatement]
        ) [MethodDeclaration]
      ) [MethodDeclarationList]
      MethodDeclaration(
        MethodTypeName_(
          Type(
           int
          ) [Type]
         inkrement
        ) [MethodTypeName_]
        FormalParams(
          FormalParamsSingleSquare(
            Type(
             int
            ) [Type]
           a
          ) [FormalParamsSingleSquare]
          FormalParamsListPom(
            FormalParamsListPomEmpty(
            ) [FormalParamsListPomEmpty]
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             inc
            ) [FormalParamsSingleSquare]
          ) [FormalParamsListPom]
        ) [FormalParams]
        VarDeclarationList(
          VarDeclarationListEmpty(
          ) [VarDeclarationListEmpty]
          VarDeclaration(
            Type(
             int
            ) [Type]
           pom
            NoSquares(
            ) [NoSquares]
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
          ) [VarDeclaration]
        ) [VarDeclarationList]
        ListStatement(
          ListStatement(
            NoStmt(
            ) [NoStmt]
            UnmatchedStmt(
              UnmatchedIfElse(
                Condition(
                  CondTerm(
                    ConditionFactor(
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            Designator(
                             inc
                              NoDesignatorChoice(
                              ) [NoDesignatorChoice]
                            ) [Designator]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                      EqualsOp(
                      ) [EqualsOp]
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            Designator(
                             jedan
                              NoDesignatorChoice(
                              ) [NoDesignatorChoice]
                            ) [Designator]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [ConditionFactor]
                    ConditionFactorListEmpty(
                    ) [ConditionFactorListEmpty]
                  ) [CondTerm]
                  ConditionTermListEmpty(
                  ) [ConditionTermListEmpty]
                ) [Condition]
                StatementNoLabelSingle(
                  SingleStatementDesignator(
                    DesignatorStatementEq(
                      Designator(
                       pom
                        NoDesignatorChoice(
                        ) [NoDesignatorChoice]
                      ) [Designator]
                      TermExpr(
                        TermSingleFactor(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [DesignatorStatementEq]
                  ) [SingleStatementDesignator]
                ) [StatementNoLabelSingle]
                UnmatchedIf(
                  Condition(
                    CondTerm(
                      ConditionFactor(
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              Designator(
                               inc
                                NoDesignatorChoice(
                                ) [NoDesignatorChoice]
                              ) [Designator]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                        EqualsOp(
                        ) [EqualsOp]
                        TermExpr(
                          TermSingleFactor(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ConditionFactor]
                      ConditionFactorListEmpty(
                      ) [ConditionFactorListEmpty]
                    ) [CondTerm]
                    ConditionTermListEmpty(
                    ) [ConditionTermListEmpty]
                  ) [Condition]
                  MatchedStmt(
                    StatementNoLabelSingle(
                      SingleStatementDesignator(
                        DesignatorStatementEq(
                          Designator(
                           pom
                            NoDesignatorChoice(
                            ) [NoDesignatorChoice]
                          ) [Designator]
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                Designator(
                                 a
                                  NoDesignatorChoice(
                                  ) [NoDesignatorChoice]
                                ) [Designator]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                        ) [DesignatorStatementEq]
                      ) [SingleStatementDesignator]
                    ) [StatementNoLabelSingle]
                  ) [MatchedStmt]
                ) [UnmatchedIf]
              ) [UnmatchedIfElse]
            ) [UnmatchedStmt]
          ) [ListStatement]
          MatchedStmt(
            StatementReturn(
              TermExpr(
                TermSingleFactor(
                  FuncCall(
                    Designator(
                     sum
                      NoDesignatorChoice(
                      ) [NoDesignatorChoice]
                    ) [Designator]
                    ActParamsFuncCall(
                      ActParams(
                        ActParamsSingle(
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                Designator(
                                 a
                                  NoDesignatorChoice(
                                  ) [NoDesignatorChoice]
                                ) [Designator]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                        ) [ActParamsSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              Designator(
                               pom
                                NoDesignatorChoice(
                                ) [NoDesignatorChoice]
                              ) [Designator]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ActParams]
                    ) [ActParamsFuncCall]
                  ) [FuncCall]
                ) [TermSingleFactor]
              ) [TermExpr]
            ) [StatementReturn]
          ) [MatchedStmt]
        ) [ListStatement]
      ) [MethodDeclaration]
    ) [MethodDeclarationList]
    MethodDeclaration(
      MethodVoidName(
       main
      ) [MethodVoidName]
      FormParsDerived1(
      ) [FormParsDerived1]
      VarDeclarationList(
        VarDeclarationListEmpty(
        ) [VarDeclarationListEmpty]
        VarDeclaration(
          Type(
           int
          ) [Type]
         bodovi
          NoSquares(
          ) [NoSquares]
          VarDeclarationListPomEmpty(
          ) [VarDeclarationListPomEmpty]
        ) [VarDeclaration]
      ) [VarDeclarationList]
      ListStatement(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          StatementNoLabelSingle(
            SingleStatementDesignator(
              DesignatorStatementActParamsEmpty(
                Designator(
                 sum
                  NoDesignatorChoice(
                  ) [NoDesignatorChoice]
                ) [Designator]
              ) [DesignatorStatementActParamsEmpty]
            ) [SingleStatementDesignator]
          ) [StatementNoLabelSingle]
        ) [MatchedStmt]
      ) [ListStatement]
    ) [MethodDeclaration]
  ) [MethodDeclarationList]
) [Program]
INFO  22:55:23,206 - ===================================
INFO  22:55:23,209 - Deklarisana konstanta nula
INFO  22:55:23,209 - Deklarisana konstanta jedan
INFO  22:55:23,209 - Deklarisana konstanta pet
INFO  22:55:23,209 - Deklarisana promenljiva niz na liniji 9
INFO  22:55:23,209 - Deklarisana promenljiva nizch na liniji 10
INFO  22:55:23,209 - Deklarisana promenljiva p na liniji 13
INFO  22:55:23,209 - Deklarisana promenljiva t1 na liniji 16
INFO  22:55:23,210 - Deklarisana promenljiva x na liniji 17
INFO  22:55:23,210 - Obradjuje se funkcija sum na liniji 23
INFO  22:55:23,210 - Obradjuje se funkcija inkrement na liniji 28
INFO  22:55:23,210 - Deklarisana promenljiva pom na liniji 29
ERROR 22:55:23,210 - Greska na liniji 31 : ime inc nije deklarisano! 
