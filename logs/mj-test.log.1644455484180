INFO  02:10:14,156 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  02:10:14,213 - #4 program
INFO  02:10:14,213 - #46 test302
INFO  02:10:14,213 - #11 const
INFO  02:10:14,214 - #46 int
INFO  02:10:14,214 - #46 jedan
INFO  02:10:14,214 - #12 =
INFO  02:10:14,215 - #45 1
INFO  02:10:14,215 - #10 ;
INFO  02:10:14,215 - #46 int
INFO  02:10:14,216 - #46 i
INFO  02:10:14,216 - #10 ;
INFO  02:10:14,216 - #46 bool
INFO  02:10:14,216 - #46 ibool
INFO  02:10:14,217 - #10 ;
INFO  02:10:14,217 - #46 int
INFO  02:10:14,217 - #46 niz2
INFO  02:10:14,217 - #10 ;
INFO  02:10:14,217 - #17 record
INFO  02:10:14,217 - #46 Test
INFO  02:10:14,218 - #5 {
INFO  02:10:14,219 - #46 int
INFO  02:10:14,219 - #46 niz
INFO  02:10:14,219 - #13 [
INFO  02:10:14,219 - #14 ]
INFO  02:10:14,219 - #10 ;
INFO  02:10:14,219 - #46 int
INFO  02:10:14,220 - #46 a
INFO  02:10:14,220 - #10 ;
INFO  02:10:14,220 - #6 }
INFO  02:10:14,220 - #17 record
INFO  02:10:14,220 - #46 Test2
INFO  02:10:14,220 - #5 {
INFO  02:10:14,220 - #46 int
INFO  02:10:14,220 - #46 b
INFO  02:10:14,220 - #10 ;
INFO  02:10:14,220 - #6 }
INFO  02:10:14,220 - #46 Test
INFO  02:10:14,221 - #46 t1
INFO  02:10:14,221 - #9 ,
INFO  02:10:14,221 - #46 t2
INFO  02:10:14,221 - #10 ;
INFO  02:10:14,221 - #46 Test2
INFO  02:10:14,221 - #46 testiranje
INFO  02:10:14,221 - #10 ;
INFO  02:10:14,221 - #5 {
INFO  02:10:14,221 - #46 int
INFO  02:10:14,222 - #46 sum
INFO  02:10:14,222 - #7 (
INFO  02:10:14,223 - #46 int
INFO  02:10:14,223 - #46 z
INFO  02:10:14,223 - #9 ,
INFO  02:10:14,224 - #46 int
INFO  02:10:14,224 - #46 d
INFO  02:10:14,224 - #8 )
INFO  02:10:14,225 - #5 {
INFO  02:10:14,225 - #44 return
INFO  02:10:14,226 - #46 z
INFO  02:10:14,226 - #27 +
INFO  02:10:14,226 - #46 d
INFO  02:10:14,227 - #10 ;
INFO  02:10:14,227 - #6 }
INFO  02:10:14,227 - #46 int
INFO  02:10:14,227 - #46 inkrement
INFO  02:10:14,227 - #7 (
INFO  02:10:14,227 - #46 int
INFO  02:10:14,228 - #46 a
INFO  02:10:14,228 - #9 ,
INFO  02:10:14,228 - #46 int
INFO  02:10:14,228 - #46 inc
INFO  02:10:14,228 - #8 )
INFO  02:10:14,228 - #46 int
INFO  02:10:14,228 - #46 pom
INFO  02:10:14,228 - #10 ;
INFO  02:10:14,228 - #5 {
INFO  02:10:14,228 - #37 if
INFO  02:10:14,229 - #7 (
INFO  02:10:14,229 - #46 inc
INFO  02:10:14,229 - #3 ==
INFO  02:10:14,229 - #46 jedan
INFO  02:10:14,230 - #8 )
INFO  02:10:14,232 - #46 pom
INFO  02:10:14,232 - #12 =
INFO  02:10:14,232 - #45 1
INFO  02:10:14,232 - #10 ;
INFO  02:10:14,233 - #39 else
INFO  02:10:14,233 - #37 if
INFO  02:10:14,234 - #7 (
INFO  02:10:14,234 - #46 inc
INFO  02:10:14,235 - #3 ==
INFO  02:10:14,235 - #45 2
INFO  02:10:14,235 - #8 )
INFO  02:10:14,235 - #46 pom
INFO  02:10:14,235 - #12 =
INFO  02:10:14,235 - #46 a
INFO  02:10:14,235 - #10 ;
INFO  02:10:14,235 - #44 return
INFO  02:10:14,236 - #46 sum
INFO  02:10:14,236 - #7 (
INFO  02:10:14,236 - #46 a
INFO  02:10:14,236 - #9 ,
INFO  02:10:14,238 - #46 pom
INFO  02:10:14,238 - #8 )
INFO  02:10:14,238 - #10 ;
INFO  02:10:14,238 - #6 }
INFO  02:10:14,239 - #46 bool
INFO  02:10:14,239 - #46 verify
INFO  02:10:14,239 - #7 (
INFO  02:10:14,239 - #8 )
INFO  02:10:14,240 - #5 {
INFO  02:10:14,240 - #24 print
INFO  02:10:14,240 - #7 (
INFO  02:10:14,240 - #48 v
INFO  02:10:14,240 - #8 )
INFO  02:10:14,241 - #10 ;
INFO  02:10:14,241 - #44 return
INFO  02:10:14,241 - #47 0
INFO  02:10:14,241 - #10 ;
INFO  02:10:14,241 - #6 }
INFO  02:10:14,242 - #18 void
INFO  02:10:14,242 - #46 main
INFO  02:10:14,242 - #7 (
INFO  02:10:14,242 - #8 )
INFO  02:10:14,242 - #5 {
INFO  02:10:14,242 - #37 if
INFO  02:10:14,242 - #7 (
INFO  02:10:14,242 - #46 verify
INFO  02:10:14,243 - #7 (
INFO  02:10:14,243 - #8 )
INFO  02:10:14,243 - #38 ||
INFO  02:10:14,243 - #46 t1
INFO  02:10:14,243 - #21 .
INFO  02:10:14,243 - #46 niz
INFO  02:10:14,243 - #13 [
INFO  02:10:14,244 - #45 2
INFO  02:10:14,244 - #14 ]
INFO  02:10:14,244 - #3 ==
INFO  02:10:14,244 - #45 4
INFO  02:10:14,244 - #8 )
INFO  02:10:14,244 - #24 print
INFO  02:10:14,244 - #7 (
INFO  02:10:14,244 - #46 ord
INFO  02:10:14,244 - #7 (
INFO  02:10:14,245 - #48 A
INFO  02:10:14,245 - #8 )
INFO  02:10:14,245 - #8 )
INFO  02:10:14,245 - #10 ;
INFO  02:10:14,245 - #39 else
INFO  02:10:14,245 - #24 print
INFO  02:10:14,245 - #7 (
INFO  02:10:14,245 - #46 ord
INFO  02:10:14,245 - #7 (
INFO  02:10:14,245 - #48 a
INFO  02:10:14,245 - #8 )
INFO  02:10:14,246 - #8 )
INFO  02:10:14,246 - #10 ;
INFO  02:10:14,246 - #6 }
INFO  02:10:14,246 - #6 }
INFO  02:10:14,252 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  DeclarationListProgram(
    DeclarationListProgram(
      DeclarationListProgram(
        DeclarationListProgram(
          DeclarationListProgram(
            DeclarationListProgram(
              DeclarationListProgram(
                DeclarationListProgram(
                  DeclarationListProgramEmpty(
                  ) [DeclarationListProgramEmpty]
                  DeclarationConst(
                    ConstDeclaration(
                      Type(
                       int
                      ) [Type]
                     jedan
                      NumConstDeclaration(
                       1
                      ) [NumConstDeclaration]
                      ConstDeclarationPomListEmpty(
                      ) [ConstDeclarationPomListEmpty]
                    ) [ConstDeclaration]
                  ) [DeclarationConst]
                ) [DeclarationListProgram]
                DeclarationVar(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                   i
                    VarDeclarationListPomEmpty(
                    ) [VarDeclarationListPomEmpty]
                  ) [VarDeclaration]
                ) [DeclarationVar]
              ) [DeclarationListProgram]
              DeclarationVar(
                VarDeclaration(
                  Type(
                   bool
                  ) [Type]
                 ibool
                  VarDeclarationListPomEmpty(
                  ) [VarDeclarationListPomEmpty]
                ) [VarDeclaration]
              ) [DeclarationVar]
            ) [DeclarationListProgram]
            DeclarationVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
               niz2
                VarDeclarationListPomEmpty(
                ) [VarDeclarationListPomEmpty]
              ) [VarDeclaration]
            ) [DeclarationVar]
          ) [DeclarationListProgram]
          DeclarationRecord(
            RecordDeclaration(
              RecordDeclarationName(
               Test
              ) [RecordDeclarationName]
              VarDeclarationList(
                VarDeclarationList(
                  VarDeclarationListEmpty(
                  ) [VarDeclarationListEmpty]
                  VarDeclarationSquares(
                    Type(
                     int
                    ) [Type]
                   niz
                    VarDeclarationListPomEmpty(
                    ) [VarDeclarationListPomEmpty]
                  ) [VarDeclarationSquares]
                ) [VarDeclarationList]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                 a
                  VarDeclarationListPomEmpty(
                  ) [VarDeclarationListPomEmpty]
                ) [VarDeclaration]
              ) [VarDeclarationList]
            ) [RecordDeclaration]
          ) [DeclarationRecord]
        ) [DeclarationListProgram]
        DeclarationRecord(
          RecordDeclaration(
            RecordDeclarationName(
             Test2
            ) [RecordDeclarationName]
            VarDeclarationList(
              VarDeclarationListEmpty(
              ) [VarDeclarationListEmpty]
              VarDeclaration(
                Type(
                 int
                ) [Type]
               b
                VarDeclarationListPomEmpty(
                ) [VarDeclarationListPomEmpty]
              ) [VarDeclaration]
            ) [VarDeclarationList]
          ) [RecordDeclaration]
        ) [DeclarationRecord]
      ) [DeclarationListProgram]
      DeclarationVar(
        VarDeclaration(
          Type(
           Test
          ) [Type]
         t1
          VarDeclarationListPom(
            VarDeclarationListPomEmpty(
            ) [VarDeclarationListPomEmpty]
           t2
          ) [VarDeclarationListPom]
        ) [VarDeclaration]
      ) [DeclarationVar]
    ) [DeclarationListProgram]
    DeclarationVar(
      VarDeclaration(
        Type(
         Test2
        ) [Type]
       testiranje
        VarDeclarationListPomEmpty(
        ) [VarDeclarationListPomEmpty]
      ) [VarDeclaration]
    ) [DeclarationVar]
  ) [DeclarationListProgram]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationList(
          MethodDeclarationListEmpty(
          ) [MethodDeclarationListEmpty]
          MethodDeclaration(
            MethodTypeName_(
              Type(
               int
              ) [Type]
             sum
            ) [MethodTypeName_]
            FormalParams(
              FormalParamsSingleSquare(
                Type(
                 int
                ) [Type]
               z
              ) [FormalParamsSingleSquare]
              FormalParamsListPom(
                FormalParamsListPomEmpty(
                ) [FormalParamsListPomEmpty]
                FormalParamsSingleSquare(
                  Type(
                   int
                  ) [Type]
                 d
                ) [FormalParamsSingleSquare]
              ) [FormalParamsListPom]
            ) [FormalParams]
            VarDeclarationListEmpty(
            ) [VarDeclarationListEmpty]
            ListStatement(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                StatementReturn(
                  AddExpr(
                    TermExpr(
                      TermSingleFactor(
                        FactorDesignator(
                          DesignatorSingle(
                           z
                          ) [DesignatorSingle]
                        ) [FactorDesignator]
                      ) [TermSingleFactor]
                    ) [TermExpr]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingleFactor(
                      FactorDesignator(
                        DesignatorSingle(
                         d
                        ) [DesignatorSingle]
                      ) [FactorDesignator]
                    ) [TermSingleFactor]
                  ) [AddExpr]
                ) [StatementReturn]
              ) [MatchedStmt]
            ) [ListStatement]
          ) [MethodDeclaration]
        ) [MethodDeclarationList]
        MethodDeclaration(
          MethodTypeName_(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodTypeName_]
          FormalParams(
            FormalParamsSingleSquare(
              Type(
               int
              ) [Type]
             a
            ) [FormalParamsSingleSquare]
            FormalParamsListPom(
              FormalParamsListPomEmpty(
              ) [FormalParamsListPomEmpty]
              FormalParamsSingleSquare(
                Type(
                 int
                ) [Type]
               inc
              ) [FormalParamsSingleSquare]
            ) [FormalParamsListPom]
          ) [FormalParams]
          VarDeclarationList(
            VarDeclarationListEmpty(
            ) [VarDeclarationListEmpty]
            VarDeclaration(
              Type(
               int
              ) [Type]
             pom
              VarDeclarationListPomEmpty(
              ) [VarDeclarationListPomEmpty]
            ) [VarDeclaration]
          ) [VarDeclarationList]
          ListStatement(
            ListStatement(
              NoStmt(
              ) [NoStmt]
              UnmatchedStmt(
                UnmatchedIfElse(
                  IFCondition1(
                    Condition(
                      CondTerm(
                        ConditionFactor(
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                DesignatorSingle(
                                 inc
                                ) [DesignatorSingle]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                          EqualsOp(
                          ) [EqualsOp]
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                DesignatorSingle(
                                 jedan
                                ) [DesignatorSingle]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                        ) [ConditionFactor]
                        ConditionFactorListEmpty(
                        ) [ConditionFactorListEmpty]
                      ) [CondTerm]
                      ConditionTermListEmpty(
                      ) [ConditionTermListEmpty]
                    ) [Condition]
                  ) [IFCondition1]
                  StatementNoLabelSingle(
                    SingleStatementDesignator(
                      DesignatorStatementEq(
                        DesignatorSingle(
                         pom
                        ) [DesignatorSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [DesignatorStatementEq]
                    ) [SingleStatementDesignator]
                  ) [StatementNoLabelSingle]
                  ElseStart1(
                  ) [ElseStart1]
                  UnmatchedIf(
                    IFCondition1(
                      Condition(
                        CondTerm(
                          ConditionFactor(
                            TermExpr(
                              TermSingleFactor(
                                FactorDesignator(
                                  DesignatorSingle(
                                   inc
                                  ) [DesignatorSingle]
                                ) [FactorDesignator]
                              ) [TermSingleFactor]
                            ) [TermExpr]
                            EqualsOp(
                            ) [EqualsOp]
                            TermExpr(
                              TermSingleFactor(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingleFactor]
                            ) [TermExpr]
                          ) [ConditionFactor]
                          ConditionFactorListEmpty(
                          ) [ConditionFactorListEmpty]
                        ) [CondTerm]
                        ConditionTermListEmpty(
                        ) [ConditionTermListEmpty]
                      ) [Condition]
                    ) [IFCondition1]
                    MatchedStmt(
                      StatementNoLabelSingle(
                        SingleStatementDesignator(
                          DesignatorStatementEq(
                            DesignatorSingle(
                             pom
                            ) [DesignatorSingle]
                            TermExpr(
                              TermSingleFactor(
                                FactorDesignator(
                                  DesignatorSingle(
                                   a
                                  ) [DesignatorSingle]
                                ) [FactorDesignator]
                              ) [TermSingleFactor]
                            ) [TermExpr]
                          ) [DesignatorStatementEq]
                        ) [SingleStatementDesignator]
                      ) [StatementNoLabelSingle]
                    ) [MatchedStmt]
                  ) [UnmatchedIf]
                ) [UnmatchedIfElse]
              ) [UnmatchedStmt]
            ) [ListStatement]
            MatchedStmt(
              StatementReturn(
                TermExpr(
                  TermSingleFactor(
                    FuncCallP(
                      DesignatorSingle(
                       sum
                      ) [DesignatorSingle]
                      ActParams(
                        ActParamsSingle(
                          TermExpr(
                            TermSingleFactor(
                              FactorDesignator(
                                DesignatorSingle(
                                 a
                                ) [DesignatorSingle]
                              ) [FactorDesignator]
                            ) [TermSingleFactor]
                          ) [TermExpr]
                        ) [ActParamsSingle]
                        TermExpr(
                          TermSingleFactor(
                            FactorDesignator(
                              DesignatorSingle(
                               pom
                              ) [DesignatorSingle]
                            ) [FactorDesignator]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ActParams]
                    ) [FuncCallP]
                  ) [TermSingleFactor]
                ) [TermExpr]
              ) [StatementReturn]
            ) [MatchedStmt]
          ) [ListStatement]
        ) [MethodDeclaration]
      ) [MethodDeclarationList]
      MethodDeclaration(
        MethodTypeName_(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodTypeName_]
        FormParsDerived1(
        ) [FormParsDerived1]
        VarDeclarationListEmpty(
        ) [VarDeclarationListEmpty]
        ListStatement(
          ListStatement(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              StatementNoLabelSingle(
                SingleStatementPrint(
                  TermExpr(
                    TermSingleFactor(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingleFactor]
                  ) [TermExpr]
                ) [SingleStatementPrint]
              ) [StatementNoLabelSingle]
            ) [MatchedStmt]
          ) [ListStatement]
          MatchedStmt(
            StatementReturn(
              TermExpr(
                TermSingleFactor(
                  FactorBoolConst(
                   0
                  ) [FactorBoolConst]
                ) [TermSingleFactor]
              ) [TermExpr]
            ) [StatementReturn]
          ) [MatchedStmt]
        ) [ListStatement]
      ) [MethodDeclaration]
    ) [MethodDeclarationList]
    MethodDeclaration(
      MethodVoidName(
       main
      ) [MethodVoidName]
      FormParsDerived1(
      ) [FormParsDerived1]
      VarDeclarationListEmpty(
      ) [VarDeclarationListEmpty]
      ListStatement(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          StatementIfElse(
            IFCondition1(
              Condition(
                CondTerm(
                  ConditionFactorSingle(
                    TermExpr(
                      TermSingleFactor(
                        FuncCallNP(
                          DesignatorSingle(
                           verify
                          ) [DesignatorSingle]
                        ) [FuncCallNP]
                      ) [TermSingleFactor]
                    ) [TermExpr]
                  ) [ConditionFactorSingle]
                  ConditionFactorListEmpty(
                  ) [ConditionFactorListEmpty]
                ) [CondTerm]
                ConditionTermList(
                  LeftOr1(
                    ConditionTermListEmpty(
                    ) [ConditionTermListEmpty]
                  ) [LeftOr1]
                  CondTerm(
                    ConditionFactor(
                      TermExpr(
                        TermSingleFactor(
                          FactorDesignator(
                            DesignatorSquare(
                              DesignatorDot(
                                DesignatorSingle(
                                 t1
                                ) [DesignatorSingle]
                               niz
                              ) [DesignatorDot]
                              TermExpr(
                                TermSingleFactor(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingleFactor]
                              ) [TermExpr]
                            ) [DesignatorSquare]
                          ) [FactorDesignator]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                      EqualsOp(
                      ) [EqualsOp]
                      TermExpr(
                        TermSingleFactor(
                          FactorNumConst(
                           4
                          ) [FactorNumConst]
                        ) [TermSingleFactor]
                      ) [TermExpr]
                    ) [ConditionFactor]
                    ConditionFactorListEmpty(
                    ) [ConditionFactorListEmpty]
                  ) [CondTerm]
                ) [ConditionTermList]
              ) [Condition]
            ) [IFCondition1]
            StatementNoLabelSingle(
              SingleStatementPrint(
                TermExpr(
                  TermSingleFactor(
                    FuncCallP(
                      DesignatorSingle(
                       ord
                      ) [DesignatorSingle]
                      ActParamsSingle(
                        TermExpr(
                          TermSingleFactor(
                            FactorCharConst(
                             A
                            ) [FactorCharConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ActParamsSingle]
                    ) [FuncCallP]
                  ) [TermSingleFactor]
                ) [TermExpr]
              ) [SingleStatementPrint]
            ) [StatementNoLabelSingle]
            ElseStart1(
            ) [ElseStart1]
            StatementNoLabelSingle(
              SingleStatementPrint(
                TermExpr(
                  TermSingleFactor(
                    FuncCallP(
                      DesignatorSingle(
                       ord
                      ) [DesignatorSingle]
                      ActParamsSingle(
                        TermExpr(
                          TermSingleFactor(
                            FactorCharConst(
                             a
                            ) [FactorCharConst]
                          ) [TermSingleFactor]
                        ) [TermExpr]
                      ) [ActParamsSingle]
                    ) [FuncCallP]
                  ) [TermSingleFactor]
                ) [TermExpr]
              ) [SingleStatementPrint]
            ) [StatementNoLabelSingle]
          ) [StatementIfElse]
        ) [MatchedStmt]
      ) [ListStatement]
    ) [MethodDeclaration]
  ) [MethodDeclarationList]
) [Program]
INFO  02:10:14,253 - ===================================
INFO  02:10:14,258 - Deklarisana konstanta jedan na liniji 5
INFO  02:10:14,259 - Deklarisana promenljiva i tipa int na liniji 7
INFO  02:10:14,259 - Deklarisana promenljiva ibool tipa bool na liniji 8
INFO  02:10:14,259 - Deklarisana promenljiva niz2 tipa int na liniji 10
INFO  02:10:14,259 - Deklarisan niz niz tipa int na liniji 13
INFO  02:10:14,259 - Deklarisana promenljiva a tipa int na liniji 14
INFO  02:10:14,259 - Deklarisana promenljiva b tipa int na liniji 18
INFO  02:10:14,260 - Deklarisana promenljiva t2 tipa Test na liniji 5
INFO  02:10:14,260 - Deklarisana promenljiva t1 tipa Test na liniji 21
INFO  02:10:14,260 - Deklarisana promenljiva testiranje tipa Test2 na liniji 22
INFO  02:10:14,260 - Obradjuje se funkcija sum na liniji 26
INFO  02:10:14,260 - Obradjuje se funkcija inkrement na liniji 31
INFO  02:10:14,261 - Deklarisana promenljiva pom tipa int na liniji 32
INFO  02:10:14,261 - Izvrsavanje poredjenje izraza  na liniji 34
INFO  02:10:14,261 - Dodela vrednosti pom na liniji 34
INFO  02:10:14,261 - Izvrsavanje poredjenje izraza  na liniji 35
INFO  02:10:14,261 - Dodela vrednosti pom na liniji 35
INFO  02:10:14,261 - Obrada IF naredbe  na liniji 35
INFO  02:10:14,261 - Obrada IF-ELSE naredbe  na liniji 34
INFO  02:10:14,262 - Pozivanje funkcije sum na liniji 37
INFO  02:10:14,262 - Obradjuje se funkcija verify na liniji 40
INFO  02:10:14,262 - Obradjena char konstanta v i setovan joj je tip char na liniji 41
INFO  02:10:14,262 - Izvrsavanje naredbe print nad argumentom tipa char na liniji 41
INFO  02:10:14,262 - Obradjuje se funkcija main na liniji 45
INFO  02:10:14,262 - Pozivanje funkcije verify na liniji 48
INFO  02:10:14,262 - Obrada uslova  na liniji 48
INFO  02:10:14,263 - Dohvatanje vrednosti polja niz objekta t1 klase record na liniji 48
INFO  02:10:14,263 - Pristupiljeno elementu niza niz na liniji 48
INFO  02:10:14,263 - Izvrsavanje poredjenje izraza  na liniji 48
INFO  02:10:14,263 - Obradjena char konstanta A i setovan joj je tip char na liniji 48
ERROR 02:10:14,263 - Ocekivani parametri funkcije ord se ne poklapaju sa prosledjenim parametrima  na liniji 48
ERROR 02:10:14,263 - Print se moze izvrsiti samo nad naredbom koja je int, char ili boolean, a ne nad none na liniji 48
INFO  02:10:14,263 - Obradjena char konstanta a i setovan joj je tip char na liniji 49
ERROR 02:10:14,263 - Ocekivani parametri funkcije ord se ne poklapaju sa prosledjenim parametrima  na liniji 49
ERROR 02:10:14,263 - Print se moze izvrsiti samo nad naredbom koja je int, char ili boolean, a ne nad none na liniji 49
INFO  02:10:14,264 -  Print count calls = 0
INFO  02:10:14,264 -  Deklarisanih promenljivih ima = 10
INFO  02:10:14,264 - ===================================
ERROR 02:10:14,265 - Parsiranje neuspesno.
