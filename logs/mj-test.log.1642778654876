INFO  16:22:11,853 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:22:11,904 - #3 program
INFO  16:22:11,904 - #45 test302
INFO  16:22:11,904 - #10 const
INFO  16:22:11,906 - #45 int
INFO  16:22:11,906 - #45 jedan
INFO  16:22:11,907 - #11 =
INFO  16:22:11,907 - #44 1
INFO  16:22:11,907 - #9 ;
INFO  16:22:11,908 - #45 int
INFO  16:22:11,909 - #45 i
INFO  16:22:11,909 - #9 ;
INFO  16:22:11,910 - #45 bool
INFO  16:22:11,911 - #45 ibool
INFO  16:22:11,911 - #9 ;
INFO  16:22:11,911 - #45 int
INFO  16:22:11,911 - #45 niz2
INFO  16:22:11,911 - #9 ;
INFO  16:22:11,911 - #16 record
INFO  16:22:11,912 - #45 Test
INFO  16:22:11,912 - #4 {
INFO  16:22:11,915 - #45 int
INFO  16:22:11,916 - #45 niz
INFO  16:22:11,916 - #12 [
INFO  16:22:11,916 - #13 ]
INFO  16:22:11,916 - #9 ;
INFO  16:22:11,916 - #45 int
INFO  16:22:11,917 - #45 a
INFO  16:22:11,917 - #9 ;
INFO  16:22:11,917 - #5 }
INFO  16:22:11,917 - #45 Test
INFO  16:22:11,917 - #45 t1
INFO  16:22:11,917 - #8 ,
INFO  16:22:11,917 - #45 t2
INFO  16:22:11,917 - #9 ;
INFO  16:22:11,917 - #4 {
INFO  16:22:11,917 - #45 int
INFO  16:22:11,918 - #45 sum
INFO  16:22:11,918 - #6 (
INFO  16:22:11,918 - #45 int
INFO  16:22:11,918 - #45 z
INFO  16:22:11,918 - #8 ,
INFO  16:22:11,919 - #45 int
INFO  16:22:11,919 - #45 d
INFO  16:22:11,919 - #7 )
INFO  16:22:11,919 - #4 {
INFO  16:22:11,919 - #43 return
INFO  16:22:11,920 - #45 z
INFO  16:22:11,920 - #26 +
INFO  16:22:11,920 - #45 d
INFO  16:22:11,921 - #9 ;
INFO  16:22:11,921 - #5 }
INFO  16:22:11,922 - #45 int
INFO  16:22:11,922 - #45 inkrement
INFO  16:22:11,922 - #6 (
INFO  16:22:11,922 - #45 int
INFO  16:22:11,922 - #45 a
INFO  16:22:11,922 - #8 ,
INFO  16:22:11,922 - #45 int
INFO  16:22:11,922 - #45 inc
INFO  16:22:11,923 - #7 )
INFO  16:22:11,923 - #45 int
INFO  16:22:11,923 - #45 pom
INFO  16:22:11,923 - #9 ;
INFO  16:22:11,923 - #4 {
INFO  16:22:11,923 - #36 if
INFO  16:22:11,923 - #6 (
INFO  16:22:11,923 - #45 inc
INFO  16:22:11,923 - #2 ==
INFO  16:22:11,923 - #45 jedan
INFO  16:22:11,924 - #7 )
INFO  16:22:11,926 - #45 pom
INFO  16:22:11,926 - #11 =
INFO  16:22:11,926 - #44 1
INFO  16:22:11,926 - #9 ;
INFO  16:22:11,926 - #38 else
INFO  16:22:11,926 - #36 if
INFO  16:22:11,927 - #6 (
INFO  16:22:11,927 - #45 inc
INFO  16:22:11,927 - #2 ==
INFO  16:22:11,927 - #44 2
INFO  16:22:11,927 - #7 )
INFO  16:22:11,927 - #45 pom
INFO  16:22:11,927 - #11 =
INFO  16:22:11,927 - #45 a
INFO  16:22:11,927 - #9 ;
INFO  16:22:11,927 - #43 return
INFO  16:22:11,927 - #45 sum
INFO  16:22:11,927 - #6 (
INFO  16:22:11,928 - #45 a
INFO  16:22:11,928 - #8 ,
INFO  16:22:11,928 - #45 pom
INFO  16:22:11,928 - #7 )
INFO  16:22:11,928 - #9 ;
INFO  16:22:11,928 - #5 }
INFO  16:22:11,928 - #45 int
INFO  16:22:11,928 - #45 verify
INFO  16:22:11,929 - #6 (
INFO  16:22:11,929 - #7 )
INFO  16:22:11,930 - #4 {
INFO  16:22:11,930 - #23 print
INFO  16:22:11,932 - #6 (
INFO  16:22:11,932 - #47 v
INFO  16:22:11,932 - #7 )
INFO  16:22:11,932 - #9 ;
INFO  16:22:11,932 - #43 return
INFO  16:22:11,932 - #44 0
INFO  16:22:11,933 - #9 ;
INFO  16:22:11,933 - #5 }
INFO  16:22:11,933 - #17 void
INFO  16:22:11,933 - #45 main
INFO  16:22:11,933 - #6 (
INFO  16:22:11,934 - #7 )
INFO  16:22:11,934 - #4 {
INFO  16:22:11,934 - #36 if
INFO  16:22:11,934 - #6 (
INFO  16:22:11,934 - #44 1
INFO  16:22:11,934 - #31 !=
INFO  16:22:11,934 - #44 1
INFO  16:22:11,935 - #7 )
INFO  16:22:11,935 - #23 print
INFO  16:22:11,935 - #6 (
INFO  16:22:11,935 - #27 -
INFO  16:22:11,935 - #44 6
INFO  16:22:11,935 - #7 )
INFO  16:22:11,935 - #9 ;
INFO  16:22:11,935 - #38 else
INFO  16:22:11,935 - #23 print
INFO  16:22:11,936 - #6 (
INFO  16:22:11,936 - #44 0
INFO  16:22:11,936 - #7 )
INFO  16:22:11,936 - #9 ;
INFO  16:22:11,936 - #45 ibool
INFO  16:22:11,936 - #11 =
INFO  16:22:11,936 - #46 false
INFO  16:22:11,936 - #9 ;
