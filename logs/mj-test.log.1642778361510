INFO  16:17:33,068 - Compiling source file: C:\Users\milan\Desktop\Faks\PP1\Projekat\Video pripreme\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  16:17:33,143 - #3 program
INFO  16:17:33,143 - #45 test302
INFO  16:17:33,143 - #10 const
INFO  16:17:33,144 - #45 int
INFO  16:17:33,144 - #45 jedan
INFO  16:17:33,145 - #11 =
INFO  16:17:33,145 - #44 1
INFO  16:17:33,145 - #9 ;
INFO  16:17:33,146 - #45 int
INFO  16:17:33,146 - #45 i
INFO  16:17:33,146 - #9 ;
INFO  16:17:33,147 - #45 bool
INFO  16:17:33,147 - #45 ibool
INFO  16:17:33,147 - #9 ;
INFO  16:17:33,147 - #45 int
INFO  16:17:33,147 - #45 niz2
INFO  16:17:33,147 - #9 ;
INFO  16:17:33,147 - #16 record
INFO  16:17:33,148 - #45 Test
INFO  16:17:33,148 - #4 {
INFO  16:17:33,148 - #45 int
INFO  16:17:33,149 - #45 niz
INFO  16:17:33,149 - #12 [
INFO  16:17:33,149 - #13 ]
INFO  16:17:33,149 - #9 ;
INFO  16:17:33,149 - #45 int
INFO  16:17:33,149 - #45 a
INFO  16:17:33,149 - #9 ;
INFO  16:17:33,149 - #5 }
INFO  16:17:33,149 - #45 Test
INFO  16:17:33,150 - #45 t1
INFO  16:17:33,150 - #8 ,
INFO  16:17:33,150 - #45 t2
INFO  16:17:33,150 - #9 ;
INFO  16:17:33,150 - #4 {
INFO  16:17:33,150 - #45 int
INFO  16:17:33,151 - #45 sum
INFO  16:17:33,151 - #6 (
INFO  16:17:33,151 - #45 int
INFO  16:17:33,151 - #45 z
INFO  16:17:33,151 - #8 ,
INFO  16:17:33,152 - #45 int
INFO  16:17:33,153 - #45 d
INFO  16:17:33,153 - #7 )
INFO  16:17:33,153 - #4 {
INFO  16:17:33,153 - #43 return
INFO  16:17:33,154 - #45 z
INFO  16:17:33,154 - #26 +
INFO  16:17:33,155 - #45 d
INFO  16:17:33,155 - #9 ;
INFO  16:17:33,156 - #5 }
INFO  16:17:33,156 - #45 int
INFO  16:17:33,156 - #45 inkrement
INFO  16:17:33,156 - #6 (
INFO  16:17:33,156 - #45 int
INFO  16:17:33,156 - #45 a
INFO  16:17:33,156 - #8 ,
INFO  16:17:33,157 - #45 int
INFO  16:17:33,157 - #45 inc
INFO  16:17:33,157 - #7 )
INFO  16:17:33,157 - #45 int
INFO  16:17:33,157 - #45 pom
INFO  16:17:33,157 - #9 ;
INFO  16:17:33,157 - #4 {
INFO  16:17:33,157 - #36 if
INFO  16:17:33,157 - #6 (
INFO  16:17:33,157 - #45 inc
INFO  16:17:33,157 - #2 ==
INFO  16:17:33,157 - #45 jedan
INFO  16:17:33,158 - #7 )
INFO  16:17:33,159 - #45 pom
INFO  16:17:33,159 - #11 =
INFO  16:17:33,159 - #44 1
INFO  16:17:33,160 - #9 ;
INFO  16:17:33,160 - #38 else
INFO  16:17:33,160 - #36 if
INFO  16:17:33,160 - #6 (
INFO  16:17:33,160 - #45 inc
INFO  16:17:33,160 - #2 ==
INFO  16:17:33,160 - #44 2
INFO  16:17:33,160 - #7 )
INFO  16:17:33,160 - #45 pom
INFO  16:17:33,160 - #11 =
INFO  16:17:33,160 - #45 a
INFO  16:17:33,161 - #9 ;
INFO  16:17:33,161 - #43 return
INFO  16:17:33,161 - #45 sum
INFO  16:17:33,161 - #6 (
INFO  16:17:33,161 - #45 a
INFO  16:17:33,161 - #8 ,
INFO  16:17:33,162 - #45 pom
INFO  16:17:33,162 - #7 )
INFO  16:17:33,162 - #9 ;
INFO  16:17:33,162 - #5 }
INFO  16:17:33,162 - #45 bool
INFO  16:17:33,162 - #45 verify
INFO  16:17:33,163 - #6 (
INFO  16:17:33,163 - #7 )
INFO  16:17:33,163 - #4 {
INFO  16:17:33,164 - #23 print
INFO  16:17:33,165 - #6 (
INFO  16:17:33,166 - #47 v
INFO  16:17:33,166 - #7 )
INFO  16:17:33,166 - #9 ;
INFO  16:17:33,166 - #43 return
INFO  16:17:33,166 - #46 false
INFO  16:17:33,166 - #9 ;
